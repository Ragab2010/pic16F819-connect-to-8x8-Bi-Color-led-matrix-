

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 26 17:56:27 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F819
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	swtext2,local,class=CONST,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F819 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108                           
   109                           	psect	nvCOMMON
   110  007C                     __pnvCOMMON:	
   111  007C                     _level:	
   112  007C                     	ds	2
   113                           
   114                           	psect	nvBANK0
   115  0048                     __pnvBANK0:	
   116  0048                     _end_hold:	
   117  0048                     	ds	2
   118  004A                     _speed:	
   119  004A                     	ds	2
   120  004C                     _button_adjust:	
   121  004C                     	ds	2
   122  004E                     _car_data:	
   123  004E                     	ds	2
   124  0050                     _pc_end_graphics:	
   125  0050                     	ds	1
   126  0003                     _STATUS	set	3
   127  0005                     _PORTAbits	set	5
   128  0006                     _PORTB	set	6
   129  0005                     _PORTA	set	5
   130  0086                     _TRISB	set	134
   131  0085                     _TRISA	set	133
   132                           
   133                           ; #config settings
   134  0000                     
   135                           	psect	cinit
   136  07F5                     start_initialization:	
   137  07F5                     __initialization:	
   138                           
   139                           ; Clear objects allocated to COMMON
   140  07F5  3070               	movlw	low __pbssCOMMON
   141  07F6  0084               	movwf	4
   142  07F7  3077               	movlw	low (__pbssCOMMON+7)
   143  07F8  2497               	fcall	clear_ram0
   144                           
   145                           ; Clear objects allocated to BANK0
   146  07F9  1383               	bcf	3,7	;select IRP bank0
   147  07FA  3020               	movlw	low __pbssBANK0
   148  07FB  0084               	movwf	4
   149  07FC  3048               	movlw	low (__pbssBANK0+40)
   150  07FD  2497               	fcall	clear_ram0
   151  07FE                     end_of_initialization:	
   152                           ;End of C runtime variable initialization code
   153                           
   154  07FE                     __end_of__initialization:	
   155  07FE  0183               	clrf	3
   156  07FF  2D6D               	ljmp	_main	;jump to C main() function
   157                           
   158                           	psect	bssCOMMON
   159  0070                     __pbssCOMMON:	
   160  0070                     _i:	
   161  0070                     	ds	2
   162  0072                     _stop_repeat:	
   163  0072                     	ds	2
   164  0074                     _vram_1:	
   165  0074                     	ds	2
   166  0076                     _pc_track:	
   167  0076                     	ds	1
   168                           
   169                           	psect	bssBANK0
   170  0020                     __pbssBANK0:	
   171  0020                     _press:	
   172  0020                     	ds	2
   173  0022                     _button_timer:	
   174  0022                     	ds	2
   175  0024                     _repeat_frame:	
   176  0024                     	ds	2
   177  0026                     _vtemp_8:	
   178  0026                     	ds	2
   179  0028                     _vtemp_7:	
   180  0028                     	ds	2
   181  002A                     _vtemp_6:	
   182  002A                     	ds	2
   183  002C                     _vtemp_5:	
   184  002C                     	ds	2
   185  002E                     _vtemp_4:	
   186  002E                     	ds	2
   187  0030                     _vtemp_3:	
   188  0030                     	ds	2
   189  0032                     _vtemp_2:	
   190  0032                     	ds	2
   191  0034                     _vtemp_1:	
   192  0034                     	ds	2
   193  0036                     _vram_8:	
   194  0036                     	ds	2
   195  0038                     _vram_7:	
   196  0038                     	ds	2
   197  003A                     _vram_6:	
   198  003A                     	ds	2
   199  003C                     _vram_5:	
   200  003C                     	ds	2
   201  003E                     _vram_4:	
   202  003E                     	ds	2
   203  0040                     _vram_3:	
   204  0040                     	ds	2
   205  0042                     _vram_2:	
   206  0042                     	ds	2
   207  0044                     _countb:	
   208  0044                     	ds	2
   209  0046                     _counta:	
   210  0046                     	ds	2
   211                           
   212                           	psect	clrtext
   213  0497                     clear_ram0:	
   214                           ;	Called with FSR containing the base address, and
   215                           ;	W with the last address+1
   216                           
   217  0497  0064               	clrwdt	;clear the watchdog before getting into this loop
   218  0498                     clrloop0:	
   219  0498  0180               	clrf	0	;clear RAM location pointed to by FSR
   220  0499  0A84               	incf	4,f	;increment pointer
   221  049A  0604               	xorwf	4,w	;XOR with final address
   222  049B  1903               	btfsc	3,2	;have we reached the end yet?
   223  049C  3400               	retlw	0	;all done for this memory range, return
   224  049D  0604               	xorwf	4,w	;XOR again to restore value
   225  049E  2C98               	goto	clrloop0	;do the next byte
   226                           
   227                           	psect	cstackCOMMON
   228  0077                     __pcstackCOMMON:	
   229  0077                     ?_end_data:	
   230  0077                     ??_end_data:	
   231                           ; 1 bytes @ 0x0
   232                           
   233  0077                     ?_delay:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0077                     ??_delay:	
   237                           ; 1 bytes @ 0x0
   238                           
   239  0077                     ?_collided:	
   240                           ; 1 bytes @ 0x0
   241                           
   242  0077                     ?_display:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0077                     ?_fill_vram:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0077                     ?_car:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0077                     ??_car:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0077                     ?_button_time:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0077                     ??_button_time:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0077                     ?_check_collision:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0077                     ?_joystick:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0077                     ??_joystick:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0077                     ?_setup:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0077                     ??_setup:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0077                     ?_collided_data:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0077                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0077                     ?_go_left:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0077                     ??_go_left:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0077                     ?_go_right:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0077                     ??_go_right:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0077                     ?_track_data:	
   294                           ; 1 bytes @ 0x0
   295                           
   296                           
   297                           ; 1 bytes @ 0x0
   298  0077                     	ds	1
   299  0078                     ??_collided:	
   300                           
   301                           ; 1 bytes @ 0x1
   302  0078                     	ds	1
   303  0079                     ??_display:	
   304  0079                     ??_check_collision:	
   305                           ; 1 bytes @ 0x2
   306                           
   307  0079                     ??_collided_data:	
   308                           ; 1 bytes @ 0x2
   309                           
   310  0079                     ??_track_data:	
   311                           ; 1 bytes @ 0x2
   312                           
   313                           
   314                           ; 1 bytes @ 0x2
   315  0079                     	ds	1
   316  007A                     ??_fill_vram:	
   317                           
   318                           ; 1 bytes @ 0x3
   319  007A                     	ds	1
   320  007B                     ??_main:	
   321                           
   322                           ; 1 bytes @ 0x4
   323  007B                     	ds	1
   324                           
   325                           	psect	maintext
   326  056D                     __pmaintext:	
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 178 in file "main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : B00/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   346 ;;      Params:         0       0       0       0
   347 ;;      Locals:         0       0       0       0
   348 ;;      Temps:          1       0       0       0
   349 ;;      Totals:         1       0       0       0
   350 ;;Total ram usage:        1 bytes
   351 ;; Hardware stack levels required when called:    4
   352 ;; This function calls:
   353 ;;		_collided_data
   354 ;;		_display
   355 ;;		_fill_vram
   356 ;;		_setup
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           
   363                           ;psect for function _main
   364  056D                     _main:	
   365                           
   366                           ;main.c: 181: TRISB=(0b00000000);
   367                           
   368                           ;incstack = 0
   369                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   370  056D  1683               	bsf	3,5	;RP0=1, select bank1
   371  056E  1303               	bcf	3,6	;RP1=0, select bank1
   372  056F  0186               	clrf	6	;volatile
   373                           
   374                           ;main.c: 182: TRISA=(0b11110000);
   375  0570  30F0               	movlw	240
   376  0571  0085               	movwf	5	;volatile
   377                           
   378                           ;main.c: 185: PORTB=(0b11110000);
   379  0572  30F0               	movlw	240
   380  0573  1283               	bcf	3,5	;RP0=0, select bank0
   381  0574  1303               	bcf	3,6	;RP1=0, select bank0
   382  0575  0086               	movwf	6	;volatile
   383                           
   384                           ;main.c: 186: PORTA=(0X00);
   385  0576  0185               	clrf	5	;volatile
   386                           
   387                           ;main.c: 190: setup();
   388  0577  253B               	fcall	_setup
   389  0578                     l1926:	
   390                           ;main.c: 192: {
   391                           ;main.c: 193: start: PORTAbits.RA3=1;;
   392                           
   393                           ;main.c: 191: while(1)
   394                           
   395  0578  1283               	bcf	3,5	;RP0=0, select bank0
   396  0579  1303               	bcf	3,6	;RP1=0, select bank0
   397  057A  1585               	bsf	5,3	;volatile
   398                           
   399                           ;main.c: 195: pc_end_graphics = 16;
   400  057B  3010               	movlw	16
   401  057C  00FB               	movwf	??_main
   402  057D  087B               	movf	??_main,w
   403  057E  00D0               	movwf	_pc_end_graphics
   404                           
   405                           ;main.c: 196: collided_data();
   406  057F  2517               	fcall	_collided_data
   407                           
   408                           ;main.c: 197: pc_end_graphics = 8 ;
   409  0580  3008               	movlw	8
   410  0581  00FB               	movwf	??_main
   411  0582  087B               	movf	??_main,w
   412  0583  1283               	bcf	3,5	;RP0=0, select bank0
   413  0584  1303               	bcf	3,6	;RP1=0, select bank0
   414  0585  00D0               	movwf	_pc_end_graphics
   415                           
   416                           ;main.c: 198: collided_data();
   417  0586  2517               	fcall	_collided_data
   418                           
   419                           ;main.c: 199: pc_end_graphics = 0;
   420  0587  1283               	bcf	3,5	;RP0=0, select bank0
   421  0588  1303               	bcf	3,6	;RP1=0, select bank0
   422  0589  01D0               	clrf	_pc_end_graphics
   423                           
   424                           ;main.c: 200: collided_data();
   425  058A  2517               	fcall	_collided_data
   426                           
   427                           ;main.c: 201: display();
   428  058B  25DF               	fcall	_display
   429                           
   430                           ;main.c: 202: fill_vram();
   431  058C  25A1               	fcall	_fill_vram
   432                           
   433                           ;main.c: 203: while((PORTAbits.RA7==1) && (PORTAbits.RA6 == 1))
   434  058D  2D94               	goto	l1946
   435  058E                     l1944:	
   436                           
   437                           ;main.c: 204: {
   438                           ;main.c: 205: press = 1;
   439  058E  3001               	movlw	1
   440  058F  1283               	bcf	3,5	;RP0=0, select bank0
   441  0590  1303               	bcf	3,6	;RP1=0, select bank0
   442  0591  00A0               	movwf	_press
   443  0592  3000               	movlw	0
   444  0593  00A1               	movwf	_press+1
   445  0594                     l1946:	
   446  0594  1283               	bcf	3,5	;RP0=0, select bank0
   447  0595  1303               	bcf	3,6	;RP1=0, select bank0
   448  0596  1F85               	btfss	5,7	;volatile
   449  0597  2D9A               	goto	l1950
   450  0598  1B05               	btfsc	5,6	;volatile
   451  0599  2D8E               	goto	l1944
   452  059A                     l1950:	
   453                           
   454                           ;main.c: 206: }
   455                           ;main.c: 207: if(press == 1)
   456  059A  0320               	decf	_press,w
   457  059B  0421               	iorwf	_press+1,w
   458  059C  1D03               	btfss	3,2
   459  059D  2D78               	goto	l1926
   460                           
   461                           ;main.c: 208: {
   462                           ;main.c: 209: press = 0;
   463  059E  01A0               	clrf	_press
   464  059F  01A1               	clrf	_press+1
   465                           
   466                           ;main.c: 210: goto start;
   467  05A0  2D78               	goto	l1926
   468  05A1                     __end_of_main:	
   469                           
   470                           	psect	text1
   471  05A1                     __ptext1:	
   472 ;; *************** function _fill_vram *****************
   473 ;; Defined at:
   474 ;;		line 537 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   488 ;;      Params:         0       0       0       0
   489 ;;      Locals:         0       0       0       0
   490 ;;      Temps:          0       0       0       0
   491 ;;      Totals:         0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    3
   495 ;; This function calls:
   496 ;;		_track_data
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _fill_vram
   504  05A1                     _fill_vram:	
   505                           
   506                           ;main.c: 540: vtemp_1 = vram_1 ;
   507                           
   508                           ;incstack = 0
   509                           ; Regs used in _fill_vram: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   510  05A1  0875               	movf	_vram_1+1,w
   511  05A2  1283               	bcf	3,5	;RP0=0, select bank0
   512  05A3  1303               	bcf	3,6	;RP1=0, select bank0
   513  05A4  00B5               	movwf	_vtemp_1+1
   514  05A5  0874               	movf	_vram_1,w
   515  05A6  00B4               	movwf	_vtemp_1
   516                           
   517                           ;main.c: 541: vtemp_2 = vram_2 ;
   518  05A7  0843               	movf	_vram_2+1,w
   519  05A8  00B3               	movwf	_vtemp_2+1
   520  05A9  0842               	movf	_vram_2,w
   521  05AA  00B2               	movwf	_vtemp_2
   522                           
   523                           ;main.c: 542: vtemp_3 = vram_3 ;
   524  05AB  0841               	movf	_vram_3+1,w
   525  05AC  00B1               	movwf	_vtemp_3+1
   526  05AD  0840               	movf	_vram_3,w
   527  05AE  00B0               	movwf	_vtemp_3
   528                           
   529                           ;main.c: 543: vtemp_4 = vram_4 ;
   530  05AF  083F               	movf	_vram_4+1,w
   531  05B0  00AF               	movwf	_vtemp_4+1
   532  05B1  083E               	movf	_vram_4,w
   533  05B2  00AE               	movwf	_vtemp_4
   534                           
   535                           ;main.c: 544: vtemp_5 = vram_5 ;
   536  05B3  083D               	movf	_vram_5+1,w
   537  05B4  00AD               	movwf	_vtemp_5+1
   538  05B5  083C               	movf	_vram_5,w
   539  05B6  00AC               	movwf	_vtemp_5
   540                           
   541                           ;main.c: 545: vtemp_6 = vram_6 ;
   542  05B7  083B               	movf	_vram_6+1,w
   543  05B8  00AB               	movwf	_vtemp_6+1
   544  05B9  083A               	movf	_vram_6,w
   545  05BA  00AA               	movwf	_vtemp_6
   546                           
   547                           ;main.c: 546: vtemp_7 = vram_7 ;
   548  05BB  0839               	movf	_vram_7+1,w
   549  05BC  00A9               	movwf	_vtemp_7+1
   550  05BD  0838               	movf	_vram_7,w
   551  05BE  00A8               	movwf	_vtemp_7
   552                           
   553                           ;main.c: 549: track_data();
   554  05BF  26AE               	fcall	_track_data
   555                           
   556                           ;main.c: 551: vram_2 = vtemp_1;
   557  05C0  1283               	bcf	3,5	;RP0=0, select bank0
   558  05C1  1303               	bcf	3,6	;RP1=0, select bank0
   559  05C2  0835               	movf	_vtemp_1+1,w
   560  05C3  00C3               	movwf	_vram_2+1
   561  05C4  0834               	movf	_vtemp_1,w
   562  05C5  00C2               	movwf	_vram_2
   563                           
   564                           ;main.c: 552: vram_3 = vtemp_2;
   565  05C6  0833               	movf	_vtemp_2+1,w
   566  05C7  00C1               	movwf	_vram_3+1
   567  05C8  0832               	movf	_vtemp_2,w
   568  05C9  00C0               	movwf	_vram_3
   569                           
   570                           ;main.c: 553: vram_4 = vtemp_3;
   571  05CA  0831               	movf	_vtemp_3+1,w
   572  05CB  00BF               	movwf	_vram_4+1
   573  05CC  0830               	movf	_vtemp_3,w
   574  05CD  00BE               	movwf	_vram_4
   575                           
   576                           ;main.c: 554: vram_5 = vtemp_4;
   577  05CE  082F               	movf	_vtemp_4+1,w
   578  05CF  00BD               	movwf	_vram_5+1
   579  05D0  082E               	movf	_vtemp_4,w
   580  05D1  00BC               	movwf	_vram_5
   581                           
   582                           ;main.c: 555: vram_6 = vtemp_5;
   583  05D2  082D               	movf	_vtemp_5+1,w
   584  05D3  00BB               	movwf	_vram_6+1
   585  05D4  082C               	movf	_vtemp_5,w
   586  05D5  00BA               	movwf	_vram_6
   587                           
   588                           ;main.c: 556: vram_7 = vtemp_6;
   589  05D6  082B               	movf	_vtemp_6+1,w
   590  05D7  00B9               	movwf	_vram_7+1
   591  05D8  082A               	movf	_vtemp_6,w
   592  05D9  00B8               	movwf	_vram_7
   593                           
   594                           ;main.c: 557: vram_8 = vtemp_7;
   595  05DA  0829               	movf	_vtemp_7+1,w
   596  05DB  00B7               	movwf	_vram_8+1
   597  05DC  0828               	movf	_vtemp_7,w
   598  05DD  00B6               	movwf	_vram_8
   599  05DE  0008               	return
   600  05DF                     __end_of_fill_vram:	
   601                           
   602                           	psect	text2
   603  06AE                     __ptext2:	
   604 ;; *************** function _track_data *****************
   605 ;; Defined at:
   606 ;;		line 451 in file "main.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      unsigned char 
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   620 ;;      Params:         0       0       0       0
   621 ;;      Locals:         0       0       0       0
   622 ;;      Temps:          1       0       0       0
   623 ;;      Totals:         1       0       0       0
   624 ;;Total ram usage:        1 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    2
   627 ;; This function calls:
   628 ;;		_collided
   629 ;;		_delay
   630 ;; This function is called by:
   631 ;;		_fill_vram
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _track_data
   637  06AE                     _track_data:	
   638                           
   639                           ;main.c: 455: pc_track = pc_track + 1 ;
   640                           
   641                           ;incstack = 0
   642                           ; Regs used in _track_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   643  06AE  0876               	movf	_pc_track,w
   644  06AF  3E01               	addlw	1
   645  06B0  00F9               	movwf	??_track_data
   646  06B1  0879               	movf	??_track_data,w
   647  06B2  00F6               	movwf	_pc_track
   648                           
   649                           ;main.c: 456: switch(pc_track)
   650  06B3  2EF5               	goto	l1792
   651  06B4                     l1672:	
   652                           ;main.c: 457: {
   653                           ;main.c: 459: case 1: vram_1=(0b10000001); break;
   654                           
   655  06B4                     l1674:	
   656                           ;main.c: 460: case 2: vram_1=(0b10000001); break;
   657                           
   658  06B4  2EEE               	goto	l1782
   659  06B5                     l1676:	
   660                           ;main.c: 461: case 3: vram_1=(0b11000001); break;
   661                           
   662  06B5  2EE2               	goto	l1766
   663  06B6                     l1678:	
   664                           ;main.c: 462: case 4: vram_1=(0b11100001); break;
   665                           
   666  06B6                     l1680:	
   667                           ;main.c: 463: case 5: vram_1=(0b11100001); break;
   668                           
   669  06B6  2EE4               	goto	l1768
   670  06B7                     l1682:	
   671                           ;main.c: 464: case 6: vram_1=(0b11110001); break;
   672                           
   673  06B7                     l1684:	
   674                           ;main.c: 465: case 7: vram_1=(0b11110001); break;
   675                           
   676  06B7  2EEC               	goto	l1778
   677  06B8                     l1686:	
   678                           ;main.c: 466: case 8: vram_1=(0b11111001); break;
   679                           
   680  06B8  2EEA               	goto	l1776
   681  06B9                     l1688:	
   682                           ;main.c: 467: case 9: vram_1=(0b11110001); break;
   683                           
   684  06B9  2EEC               	goto	l1778
   685  06BA                     l1690:	
   686                           ;main.c: 468: case 10: vram_1=(0b11100001); break;
   687                           
   688  06BA  2EE4               	goto	l1768
   689  06BB                     l1692:	
   690                           ;main.c: 469: case 11: vram_1=(0b11000011); break;
   691                           
   692  06BB  2ED0               	goto	l1740
   693  06BC                     l1694:	
   694                           ;main.c: 470: case 12: vram_1=(0b10000111); break;
   695                           
   696  06BC  2EE0               	goto	l1764
   697  06BD                     l1696:	
   698                           ;main.c: 471: case 13: vram_1=(0b10001111); break;
   699                           
   700  06BD  2EDE               	goto	l1762
   701  06BE                     l1698:	
   702                           ;main.c: 472: case 14: vram_1=(0b10000111); break;
   703                           
   704  06BE  2EE0               	goto	l1764
   705  06BF                     l1700:	
   706                           ;main.c: 473: case 15: vram_1=(0b10000011); break;
   707                           
   708  06BF  2EDB               	goto	l1758
   709  06C0                     l1702:	
   710                           ;main.c: 474: case 16: vram_1=(0b10110001); break;
   711                           
   712  06C0  2EF0               	goto	l1788
   713  06C1                     l1704:	
   714                           ;main.c: 475: case 17: vram_1=(0b10111001); break;
   715                           
   716  06C1                     l1706:	
   717                           ;main.c: 476: case 18: vram_1=(0b10111001); break;
   718                           
   719  06C1                     l1708:	
   720                           ;main.c: 477: case 19: vram_1=(0b10111001); break;
   721                           
   722  06C1  2ED6               	goto	l1752
   723  06C2                     l1710:	
   724                           ;main.c: 478: case 20: vram_1=(0b10010001); break;
   725                           
   726  06C2  2ED3               	goto	l1746
   727  06C3                     l1712:	
   728                           ;main.c: 479: case 21: vram_1=(0b10000001); break;
   729                           
   730  06C3                     l1714:	
   731                           ;main.c: 480: case 22: vram_1=(0b10000001); break;
   732                           
   733  06C3  2EEE               	goto	l1782
   734  06C4                     l1716:	
   735                           ;main.c: 481: case 23: vram_1=(0b11000011); break;
   736                           
   737  06C4  2ED0               	goto	l1740
   738  06C5                     l1718:	
   739                           ;main.c: 482: case 24: vram_1=(0b11100111); break;
   740                           
   741  06C5  2ECE               	goto	l1738
   742  06C6                     l1720:	
   743                           ;main.c: 483: case 25: vram_1=(0b11000011); break;
   744                           
   745  06C6  2ED0               	goto	l1740
   746  06C7                     l1722:	
   747                           ;main.c: 484: case 26: vram_1=(0b10000001); break;
   748                           
   749  06C7  2EEE               	goto	l1782
   750  06C8                     l1724:	
   751                           ;main.c: 485: case 27: vram_1=(0b10011001); break;
   752                           
   753  06C8                     l1726:	
   754                           ;main.c: 486: case 28: vram_1=(0b10011001); break;
   755                           
   756  06C8  2ED8               	goto	l1754
   757  06C9                     l1728:	
   758                           ;main.c: 487: case 29: vram_1=(0b10111101); break;
   759                           
   760  06C9  30BD               	movlw	189
   761  06CA  2EF1               	goto	L57
   762  06CB                     l1730:	
   763                           ;main.c: 488: case 31: vram_1=(0b10011001); break;
   764                           
   765  06CB                     l1732:	
   766                           ;main.c: 489: case 32: vram_1=(0b10011001); break;
   767                           
   768  06CB  2ED8               	goto	l1754
   769  06CC                     l1734:	
   770                           ;main.c: 490: case 33: vram_1=(0b10000001); break;
   771                           
   772  06CC  2EEE               	goto	l1782
   773  06CD                     l1736:	
   774                           ;main.c: 491: case 34: vram_1=(0b11000011); break;
   775                           
   776  06CD  2ED0               	goto	l1740
   777  06CE                     l1738:	
   778                           ;main.c: 492: case 35: vram_1=(0b11100111); break;
   779                           
   780  06CE  30E7               	movlw	231
   781  06CF  2EF1               	goto	L57
   782  06D0                     l1740:	
   783                           ;main.c: 493: case 36: vram_1=(0b11000011); break;
   784                           
   785  06D0  30C3               	movlw	195
   786  06D1  2EF1               	goto	L57
   787  06D2                     l1742:	
   788                           ;main.c: 494: case 37: vram_1=(0b10000001); break;
   789                           
   790  06D2                     l1744:	
   791                           ;main.c: 495: case 38: vram_1=(0b10000001); break;
   792                           
   793  06D2  2EEE               	goto	l1782
   794  06D3                     l1746:	
   795                           ;main.c: 496: case 39: vram_1=(0b10010001); break;
   796                           
   797  06D3  3091               	movlw	145
   798  06D4  2EF1               	goto	L57
   799  06D5                     l1748:	
   800                           ;main.c: 497: case 40: vram_1=(0b10110001); break;
   801                           
   802  06D5  2EF0               	goto	l1788
   803  06D6                     l1750:	
   804                           ;main.c: 498: case 41: vram_1=(0b10111001); break;
   805                           
   806  06D6                     l1752:	
   807                           ;main.c: 499: case 42: vram_1=(0b10111001); break;
   808                           
   809  06D6  30B9               	movlw	185
   810  06D7  2EF1               	goto	L57
   811  06D8                     l1754:	
   812                           ;main.c: 500: case 43: vram_1=(0b10011001); break;
   813                           
   814  06D8  3099               	movlw	153
   815  06D9  2EF1               	goto	L57
   816  06DA                     l1756:	
   817                           ;main.c: 501: case 44: vram_1=(0b10000001); break;
   818                           
   819  06DA  2EEE               	goto	l1782
   820  06DB                     l1758:	
   821                           ;main.c: 502: case 45: vram_1=(0b10000011); break;
   822                           
   823  06DB  3083               	movlw	131
   824  06DC  2EF1               	goto	L57
   825  06DD                     l1760:	
   826                           ;main.c: 503: case 46: vram_1=(0b10000111); break;
   827                           
   828  06DD  2EE0               	goto	l1764
   829  06DE                     l1762:	
   830                           ;main.c: 504: case 47: vram_1=(0b10001111); break;
   831                           
   832  06DE  308F               	movlw	143
   833  06DF  2EF1               	goto	L57
   834  06E0                     l1764:	
   835                           ;main.c: 505: case 48: vram_1=(0b10000111); break;
   836                           
   837  06E0  3087               	movlw	135
   838  06E1  2EF1               	goto	L57
   839  06E2                     l1766:	
   840                           ;main.c: 506: case 49: vram_1=(0b11000001); break;
   841                           
   842  06E2  30C1               	movlw	193
   843  06E3  2EF1               	goto	L57
   844  06E4                     l1768:	
   845                           ;main.c: 507: case 50: vram_1=(0b11100001); break;
   846                           
   847  06E4  30E1               	movlw	225
   848  06E5  2EF1               	goto	L57
   849  06E6                     l1770:	
   850                           ;main.c: 508: case 51: vram_1=(0b11110001); break;
   851                           
   852  06E6  2EEC               	goto	l1778
   853  06E7                     l1772:	
   854                           ;main.c: 509: case 52: vram_1=(0b11111001); break;
   855                           
   856  06E7  2EEA               	goto	l1776
   857  06E8                     l1774:	
   858                           ;main.c: 510: case 55: vram_1=(0b11111101); break;
   859                           
   860  06E8  30FD               	movlw	253
   861  06E9  2EF1               	goto	L57
   862  06EA                     l1776:	
   863                           ;main.c: 511: case 56: vram_1=(0b11111001); break;
   864                           
   865  06EA  30F9               	movlw	249
   866  06EB  2EF1               	goto	L57
   867  06EC                     l1778:	
   868                           ;main.c: 512: case 57: vram_1=(0b11110001); break;
   869                           
   870  06EC  30F1               	movlw	241
   871  06ED  2EF1               	goto	L57
   872  06EE                     l1780:	
   873                           ;main.c: 513: case 58: vram_1=(0b10000001); break;
   874                           
   875  06EE                     l1782:	
   876                           ;main.c: 514: case 59: vram_1=(0b10000001); break;
   877                           
   878  06EE  3081               	movlw	129
   879  06EF  2EF1               	goto	L57
   880  06F0                     l1784:	
   881                           ;main.c: 515: case 60: vram_1=(0b10110001); break;
   882                           
   883  06F0                     l1786:	
   884                           ;main.c: 516: case 61: vram_1=(0b10110001); break;
   885                           
   886  06F0                     l1788:	
   887                           ;main.c: 517: case 62: vram_1=(0b10110001); break;
   888                           
   889  06F0  30B1               	movlw	177
   890  06F1                     L57:	
   891  06F1  00F4               	movwf	_vram_1
   892  06F2  3000               	movlw	0
   893  06F3  00F5               	movwf	_vram_1+1
   894                           
   895                           ;main.c: 519: }
   896                           
   897                           ;main.c: 518: default : break;
   898  06F4  2F03               	goto	l1794
   899  06F5                     l1792:	
   900  06F5  0876               	movf	_pc_track,w
   901                           
   902                           ; Switch size 1, requested type "space"
   903                           ; Number of cases is 59, Range of values is 1 to 62
   904                           ; switch strategies available:
   905                           ; Name         Instructions Cycles
   906                           ; direct_byte           71     9 (fixed)
   907                           ; simple_byte          178    90 (average)
   908                           ; jumptable            263     9 (fixed)
   909                           ;	Chosen strategy is direct_byte
   910  06F6  3EFF               	addlw	-1
   911  06F7  1C03               	skipc
   912  06F8  2F04               	goto	L58
   913  06F9  0084               	movwf	4
   914  06FA  303E               	movlw	62
   915  06FB  0204               	subwf	4,w
   916  06FC  1803               	skipnc
   917  06FD  2F03               	goto	l1794
   918  06FE  3000               	movlw	high S1994
   919  06FF  008A               	movwf	10
   920  0700  3041               	movlw	low S1994
   921  0701  0704               	addwf	4,w
   922  0702  0082               	movwf	2
   923  0703                     l1794:	
   924                           
   925                           ;main.c: 520: level = level<< 1;
   926  0703  1003               	clrc
   927  0704                     L58:	
   928  0704  0D7C               	rlf	_level,w
   929  0705  00FC               	movwf	_level
   930  0706  0D7D               	rlf	_level+1,w
   931  0707  00FD               	movwf	_level+1
   932                           
   933                           ;main.c: 521: PORTA=(0b00001000);
   934  0708  3008               	movlw	8
   935  0709  1283               	bcf	3,5	;RP0=0, select bank0
   936  070A  1303               	bcf	3,6	;RP1=0, select bank0
   937  070B  0085               	movwf	5	;volatile
   938                           
   939                           ;main.c: 522: delay();
   940  070C  24F7               	fcall	_delay
   941                           
   942                           ;main.c: 523: PORTA=(0b00000000);
   943  070D  1283               	bcf	3,5	;RP0=0, select bank0
   944  070E  1303               	bcf	3,6	;RP1=0, select bank0
   945  070F  0185               	clrf	5	;volatile
   946                           
   947                           ;main.c: 524: if((level & 0b01000000) == 0b01000000)
   948  0710  1F7C               	btfss	_level,6
   949  0711  2F14               	goto	l1804
   950                           
   951                           ;main.c: 525: {
   952                           ;main.c: 526: collided();
   953  0712  2643               	fcall	_collided
   954                           
   955                           ;main.c: 527: }
   956  0713  2F1C               	goto	l1806
   957  0714                     l1804:	
   958                           
   959                           ;main.c: 528: else
   960                           ;main.c: 529: {
   961                           ;main.c: 530: speed --;
   962  0714  30FF               	movlw	255
   963  0715  1283               	bcf	3,5	;RP0=0, select bank0
   964  0716  1303               	bcf	3,6	;RP1=0, select bank0
   965  0717  07CA               	addwf	_speed,f
   966  0718  1803               	skipnc
   967  0719  0ACB               	incf	_speed+1,f
   968  071A  30FF               	movlw	255
   969  071B  07CB               	addwf	_speed+1,f
   970  071C                     l1806:	
   971                           
   972                           ;main.c: 531: }
   973                           ;main.c: 533: pc_track = 0X01;
   974  071C  01F6               	clrf	_pc_track
   975  071D  0AF6               	incf	_pc_track,f
   976  071E  0008               	return
   977  071F                     __end_of_track_data:	
   978                           ;main.c: 534: return (0b10000001);
   979                           ;	Return value of _track_data is never used
   980                           
   981                           
   982                           	psect	swtext1
   983  0041                     __pswtext1:	
   984  0041                     S1994:	
   985  0041  2EB4               	ljmp	l1672
   986  0042  2EB4               	ljmp	l1674
   987  0043  2EB5               	ljmp	l1676
   988  0044  2EB6               	ljmp	l1678
   989  0045  2EB6               	ljmp	l1680
   990  0046  2EB7               	ljmp	l1682
   991  0047  2EB7               	ljmp	l1684
   992  0048  2EB8               	ljmp	l1686
   993  0049  2EB9               	ljmp	l1688
   994  004A  2EBA               	ljmp	l1690
   995  004B  2EBB               	ljmp	l1692
   996  004C  2EBC               	ljmp	l1694
   997  004D  2EBD               	ljmp	l1696
   998  004E  2EBE               	ljmp	l1698
   999  004F  2EBF               	ljmp	l1700
  1000  0050  2EC0               	ljmp	l1702
  1001  0051  2EC1               	ljmp	l1704
  1002  0052  2EC1               	ljmp	l1706
  1003  0053  2EC1               	ljmp	l1708
  1004  0054  2EC2               	ljmp	l1710
  1005  0055  2EC3               	ljmp	l1712
  1006  0056  2EC3               	ljmp	l1714
  1007  0057  2EC4               	ljmp	l1716
  1008  0058  2EC5               	ljmp	l1718
  1009  0059  2EC6               	ljmp	l1720
  1010  005A  2EC7               	ljmp	l1722
  1011  005B  2EC8               	ljmp	l1724
  1012  005C  2EC8               	ljmp	l1726
  1013  005D  2EC9               	ljmp	l1728
  1014  005E  2F03               	ljmp	l1794
  1015  005F  2ECB               	ljmp	l1730
  1016  0060  2ECB               	ljmp	l1732
  1017  0061  2ECC               	ljmp	l1734
  1018  0062  2ECD               	ljmp	l1736
  1019  0063  2ECE               	ljmp	l1738
  1020  0064  2ED0               	ljmp	l1740
  1021  0065  2ED2               	ljmp	l1742
  1022  0066  2ED2               	ljmp	l1744
  1023  0067  2ED3               	ljmp	l1746
  1024  0068  2ED5               	ljmp	l1748
  1025  0069  2ED6               	ljmp	l1750
  1026  006A  2ED6               	ljmp	l1752
  1027  006B  2ED8               	ljmp	l1754
  1028  006C  2EDA               	ljmp	l1756
  1029  006D  2EDB               	ljmp	l1758
  1030  006E  2EDD               	ljmp	l1760
  1031  006F  2EDE               	ljmp	l1762
  1032  0070  2EE0               	ljmp	l1764
  1033  0071  2EE2               	ljmp	l1766
  1034  0072  2EE4               	ljmp	l1768
  1035  0073  2EE6               	ljmp	l1770
  1036  0074  2EE7               	ljmp	l1772
  1037  0075  2F03               	ljmp	l1794
  1038  0076  2F03               	ljmp	l1794
  1039  0077  2EE8               	ljmp	l1774
  1040  0078  2EEA               	ljmp	l1776
  1041  0079  2EEC               	ljmp	l1778
  1042  007A  2EEE               	ljmp	l1780
  1043  007B  2EEE               	ljmp	l1782
  1044  007C  2EF0               	ljmp	l1784
  1045  007D  2EF0               	ljmp	l1786
  1046  007E  2EF0               	ljmp	l1788
  1047                           
  1048                           	psect	text3
  1049  05DF                     __ptext3:	
  1050 ;; *************** function _display *****************
  1051 ;; Defined at:
  1052 ;;		line 317 in file "main.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1066 ;;      Params:         0       0       0       0
  1067 ;;      Locals:         0       0       0       0
  1068 ;;      Temps:          2       0       0       0
  1069 ;;      Totals:         2       0       0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    3
  1073 ;; This function calls:
  1074 ;;		_button_time
  1075 ;;		_car
  1076 ;;		_check_collision
  1077 ;;		_delay
  1078 ;; This function is called by:
  1079 ;;		_main
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _display
  1085  05DF                     _display:	
  1086                           
  1087                           ;main.c: 320: repeat_frame = speed;
  1088                           
  1089                           ;incstack = 0
  1090                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1091  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1092  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1093  05E1  084B               	movf	_speed+1,w
  1094  05E2  00A5               	movwf	_repeat_frame+1
  1095  05E3  084A               	movf	_speed,w
  1096  05E4  00A4               	movwf	_repeat_frame
  1097                           
  1098                           ;main.c: 321: car();
  1099  05E5  24AA               	fcall	_car
  1100  05E6                     l1898:	
  1101                           ;main.c: 323: while(repeat_frame !=0)
  1102                           
  1103  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1104  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1105  05E8  0824               	movf	_repeat_frame,w
  1106  05E9  0425               	iorwf	_repeat_frame+1,w
  1107  05EA  1903               	btfsc	3,2
  1108  05EB  0008               	return
  1109                           
  1110                           ;main.c: 324: {
  1111                           ;main.c: 325: PORTA=(0b00001000);
  1112  05EC  3008               	movlw	8
  1113  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1114  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1115  05EF  0085               	movwf	5	;volatile
  1116                           
  1117                           ;main.c: 326: PORTB=(vram_1);
  1118  05F0  0874               	movf	_vram_1,w
  1119  05F1  0086               	movwf	6	;volatile
  1120                           
  1121                           ;main.c: 327: delay();
  1122  05F2  24F7               	fcall	_delay
  1123                           
  1124                           ;main.c: 328: PORTB=(0X00);
  1125  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  1126  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  1127  05F5  0186               	clrf	6	;volatile
  1128                           
  1129                           ;main.c: 330: PORTA=(0b00001001);
  1130  05F6  3009               	movlw	9
  1131  05F7  0085               	movwf	5	;volatile
  1132                           
  1133                           ;main.c: 331: PORTB=(vram_2);
  1134  05F8  0842               	movf	_vram_2,w
  1135  05F9  0086               	movwf	6	;volatile
  1136                           
  1137                           ;main.c: 332: delay();
  1138  05FA  24F7               	fcall	_delay
  1139                           
  1140                           ;main.c: 333: PORTB=(0X00);
  1141  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1142  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1143  05FD  0186               	clrf	6	;volatile
  1144                           
  1145                           ;main.c: 335: PORTA=(0b00001010);
  1146  05FE  300A               	movlw	10
  1147  05FF  0085               	movwf	5	;volatile
  1148                           
  1149                           ;main.c: 336: PORTB=(vram_3);
  1150  0600  0840               	movf	_vram_3,w
  1151  0601  0086               	movwf	6	;volatile
  1152                           
  1153                           ;main.c: 337: delay();
  1154  0602  24F7               	fcall	_delay
  1155                           
  1156                           ;main.c: 338: PORTB=(0X00);
  1157  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0605  0186               	clrf	6	;volatile
  1160                           
  1161                           ;main.c: 341: PORTA=(0b00001011);
  1162  0606  300B               	movlw	11
  1163  0607  0085               	movwf	5	;volatile
  1164                           
  1165                           ;main.c: 342: PORTB=(vram_4);
  1166  0608  083E               	movf	_vram_4,w
  1167  0609  0086               	movwf	6	;volatile
  1168                           
  1169                           ;main.c: 343: delay();
  1170  060A  24F7               	fcall	_delay
  1171                           
  1172                           ;main.c: 344: PORTB=(0X00);
  1173  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1174  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1175  060D  0186               	clrf	6	;volatile
  1176                           
  1177                           ;main.c: 346: PORTA=(0b00001100);
  1178  060E  300C               	movlw	12
  1179  060F  0085               	movwf	5	;volatile
  1180                           
  1181                           ;main.c: 347: PORTB=(vram_5);
  1182  0610  083C               	movf	_vram_5,w
  1183  0611  0086               	movwf	6	;volatile
  1184                           
  1185                           ;main.c: 348: delay();
  1186  0612  24F7               	fcall	_delay
  1187                           
  1188                           ;main.c: 349: PORTB=(0X00);
  1189  0613  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0614  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0615  0186               	clrf	6	;volatile
  1192                           
  1193                           ;main.c: 351: PORTA=(0b00001101);
  1194  0616  300D               	movlw	13
  1195  0617  0085               	movwf	5	;volatile
  1196                           
  1197                           ;main.c: 352: PORTB=(vram_6);
  1198  0618  083A               	movf	_vram_6,w
  1199  0619  0086               	movwf	6	;volatile
  1200                           
  1201                           ;main.c: 353: delay();
  1202  061A  24F7               	fcall	_delay
  1203                           
  1204                           ;main.c: 354: PORTB=(0X00);
  1205  061B  1283               	bcf	3,5	;RP0=0, select bank0
  1206  061C  1303               	bcf	3,6	;RP1=0, select bank0
  1207  061D  0186               	clrf	6	;volatile
  1208                           
  1209                           ;main.c: 356: PORTA=(0b00001110);
  1210  061E  300E               	movlw	14
  1211  061F  0085               	movwf	5	;volatile
  1212                           
  1213                           ;main.c: 357: PORTB=(vram_7);
  1214  0620  0838               	movf	_vram_7,w
  1215  0621  0086               	movwf	6	;volatile
  1216                           
  1217                           ;main.c: 358: delay();
  1218  0622  24F7               	fcall	_delay
  1219                           
  1220                           ;main.c: 359: PORTB=(0X00);
  1221  0623  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0624  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0625  0186               	clrf	6	;volatile
  1224                           
  1225                           ;main.c: 361: PORTA=(0b00001111);
  1226  0626  300F               	movlw	15
  1227  0627  0085               	movwf	5	;volatile
  1228                           
  1229                           ;main.c: 362: PORTB=(vram_8);
  1230  0628  0836               	movf	_vram_8,w
  1231  0629  0086               	movwf	6	;volatile
  1232                           
  1233                           ;main.c: 363: delay();
  1234  062A  24F7               	fcall	_delay
  1235                           
  1236                           ;main.c: 364: PORTB=(0X00);
  1237  062B  1283               	bcf	3,5	;RP0=0, select bank0
  1238  062C  1303               	bcf	3,6	;RP1=0, select bank0
  1239  062D  0186               	clrf	6	;volatile
  1240                           
  1241                           ;main.c: 365: if((stop_repeat & 0b00000010 ) == 1)
  1242  062E  3002               	movlw	2
  1243  062F  0572               	andwf	_stop_repeat,w
  1244  0630  00F9               	movwf	??_display
  1245  0631  3000               	movlw	0
  1246  0632  0573               	andwf	_stop_repeat+1,w
  1247  0633  00FA               	movwf	??_display+1
  1248  0634  0379               	decf	??_display,w
  1249  0635  047A               	iorwf	??_display+1,w
  1250  0636  1D03               	btfss	3,2
  1251  0637  2E3A               	goto	l1896
  1252                           
  1253                           ;main.c: 366: {
  1254                           ;main.c: 367: button_time();
  1255  0638  24C2               	fcall	_button_time
  1256                           
  1257                           ;main.c: 368: check_collision();
  1258  0639  24B6               	fcall	_check_collision
  1259  063A                     l1896:	
  1260                           
  1261                           ;main.c: 371: }
  1262                           ;main.c: 372: repeat_frame--;
  1263  063A  30FF               	movlw	255
  1264  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1265  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1266  063D  07A4               	addwf	_repeat_frame,f
  1267  063E  1803               	skipnc
  1268  063F  0AA5               	incf	_repeat_frame+1,f
  1269  0640  30FF               	movlw	255
  1270  0641  07A5               	addwf	_repeat_frame+1,f
  1271  0642  2DE6               	goto	l1898
  1272  0643                     __end_of_display:	
  1273                           ;main.c: 373: }
  1274                           ;main.c: 374: return;
  1275                           
  1276                           
  1277                           	psect	text4
  1278  04B6                     __ptext4:	
  1279 ;; *************** function _check_collision *****************
  1280 ;; Defined at:
  1281 ;;		line 377 in file "main.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1295 ;;      Params:         0       0       0       0
  1296 ;;      Locals:         0       0       0       0
  1297 ;;      Temps:          0       0       0       0
  1298 ;;      Totals:         0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    2
  1302 ;; This function calls:
  1303 ;;		_collided
  1304 ;; This function is called by:
  1305 ;;		_display
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _check_collision
  1311  04B6                     _check_collision:	
  1312                           
  1313                           ;main.c: 379: vram_8 = vram_8 & car_data;
  1314                           
  1315                           ;incstack = 0
  1316                           ; Regs used in _check_collision: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1317  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1318  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1319  04B8  084E               	movf	_car_data,w
  1320  04B9  0536               	andwf	_vram_8,w
  1321  04BA  00B6               	movwf	_vram_8
  1322  04BB  084F               	movf	_car_data+1,w
  1323  04BC  0537               	andwf	_vram_8+1,w
  1324  04BD  00B7               	movwf	_vram_8+1
  1325                           
  1326                           ;main.c: 380: if((STATUS & 0b00000100) == 0b00000000)
  1327  04BE  1903               	btfsc	3,2	;volatile
  1328  04BF  0008               	return
  1329                           
  1330                           ;main.c: 381: {
  1331                           ;main.c: 382: collided();
  1332  04C0  2643               	fcall	_collided
  1333  04C1  0008               	return
  1334  04C2                     __end_of_check_collision:	
  1335                           
  1336                           	psect	text5
  1337  04AA                     __ptext5:	
  1338 ;; *************** function _car *****************
  1339 ;; Defined at:
  1340 ;;		line 389 in file "main.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1354 ;;      Params:         0       0       0       0
  1355 ;;      Locals:         0       0       0       0
  1356 ;;      Temps:          0       0       0       0
  1357 ;;      Totals:         0       0       0       0
  1358 ;;Total ram usage:        0 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    2
  1361 ;; This function calls:
  1362 ;;		_delay
  1363 ;;		_joystick
  1364 ;; This function is called by:
  1365 ;;		_display
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _car
  1371  04AA                     _car:	
  1372                           
  1373                           ;main.c: 391: joystick();
  1374                           
  1375                           ;incstack = 0
  1376                           ; Regs used in _car: [wreg+status,2+status,0+pclath+cstack]
  1377  04AA  249F               	fcall	_joystick
  1378                           
  1379                           ;main.c: 392: PORTA=(0b11111011);
  1380  04AB  30FB               	movlw	251
  1381  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1382  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1383  04AE  0085               	movwf	5	;volatile
  1384                           
  1385                           ;main.c: 393: PORTB=(car_data);
  1386  04AF  084E               	movf	_car_data,w
  1387  04B0  0086               	movwf	6	;volatile
  1388                           
  1389                           ;main.c: 394: delay();
  1390  04B1  24F7               	fcall	_delay
  1391                           
  1392                           ;main.c: 396: PORTAbits.RA3=1;
  1393  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1394  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1395  04B4  1585               	bsf	5,3	;volatile
  1396  04B5  0008               	return
  1397  04B6                     __end_of_car:	
  1398                           ;main.c: 397: return;
  1399                           
  1400                           
  1401                           	psect	text6
  1402  049F                     __ptext6:	
  1403 ;; *************** function _joystick *****************
  1404 ;; Defined at:
  1405 ;;		line 424 in file "main.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1419 ;;      Params:         0       0       0       0
  1420 ;;      Locals:         0       0       0       0
  1421 ;;      Temps:          0       0       0       0
  1422 ;;      Totals:         0       0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    1
  1426 ;; This function calls:
  1427 ;;		_go_left
  1428 ;;		_go_right
  1429 ;; This function is called by:
  1430 ;;		_car
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _joystick
  1436  049F                     _joystick:	
  1437                           
  1438                           ;main.c: 426: if(PORTAbits.RA7==0)
  1439                           
  1440                           ;incstack = 0
  1441                           ; Regs used in _joystick: [wreg+status,2+status,0+pclath+cstack]
  1442  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1443  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1444  04A1  1B85               	btfsc	5,7	;volatile
  1445  04A2  2CA4               	goto	l1638
  1446                           
  1447                           ;main.c: 427: {
  1448                           ;main.c: 428: go_left();
  1449  04A3  24D3               	fcall	_go_left
  1450  04A4                     l1638:	
  1451                           
  1452                           ;main.c: 429: }
  1453                           ;main.c: 431: if(PORTAbits.RA6==0)
  1454  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1455  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1456  04A6  1B05               	btfsc	5,6	;volatile
  1457  04A7  0008               	return
  1458                           
  1459                           ;main.c: 432: {
  1460                           ;main.c: 433: go_right();
  1461  04A8  24E5               	fcall	_go_right
  1462  04A9  0008               	return
  1463  04AA                     __end_of_joystick:	
  1464                           ;main.c: 434: }
  1465                           ;main.c: 435: return;
  1466                           
  1467                           
  1468                           	psect	text7
  1469  04E5                     __ptext7:	
  1470 ;; *************** function _go_right *****************
  1471 ;; Defined at:
  1472 ;;		line 413 in file "main.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1486 ;;      Params:         0       0       0       0
  1487 ;;      Locals:         0       0       0       0
  1488 ;;      Temps:          0       0       0       0
  1489 ;;      Totals:         0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_joystick
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _go_right
  1501  04E5                     _go_right:	
  1502                           
  1503                           ;main.c: 415: if ((stop_repeat & 0X01)==0X01)
  1504                           
  1505                           ;incstack = 0
  1506                           ; Regs used in _go_right: [wreg]
  1507  04E5  1872               	btfsc	_stop_repeat,0
  1508  04E6  0008               	return
  1509                           
  1510                           ;main.c: 418: }
  1511                           ;main.c: 419: car_data = car_data<<1;
  1512                           
  1513                           ;main.c: 416: {
  1514                           ;main.c: 417: return;
  1515  04E7  1003               	clrc
  1516  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  1517  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  1518  04EA  0D4E               	rlf	_car_data,w
  1519  04EB  00CE               	movwf	_car_data
  1520  04EC  0D4F               	rlf	_car_data+1,w
  1521  04ED  00CF               	movwf	_car_data+1
  1522                           
  1523                           ;main.c: 420: stop_repeat|= 0X03;
  1524  04EE  3003               	movlw	3
  1525  04EF  04F2               	iorwf	_stop_repeat,f
  1526  04F0  3000               	movlw	0
  1527  04F1  04F3               	iorwf	_stop_repeat+1,f
  1528                           
  1529                           ;main.c: 421: button_timer= button_adjust;
  1530  04F2  084D               	movf	_button_adjust+1,w
  1531  04F3  00A3               	movwf	_button_timer+1
  1532  04F4  084C               	movf	_button_adjust,w
  1533  04F5  00A2               	movwf	_button_timer
  1534  04F6  0008               	return
  1535  04F7                     __end_of_go_right:	
  1536                           ;main.c: 422: return;
  1537                           
  1538                           
  1539                           	psect	text8
  1540  04D3                     __ptext8:	
  1541 ;; *************** function _go_left *****************
  1542 ;; Defined at:
  1543 ;;		line 401 in file "main.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1557 ;;      Params:         0       0       0       0
  1558 ;;      Locals:         0       0       0       0
  1559 ;;      Temps:          0       0       0       0
  1560 ;;      Totals:         0       0       0       0
  1561 ;;Total ram usage:        0 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_joystick
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function _go_left
  1572  04D3                     _go_left:	
  1573                           
  1574                           ;main.c: 403: if ((stop_repeat & 0X01)==0X01)
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _go_left: [wreg]
  1578  04D3  1872               	btfsc	_stop_repeat,0
  1579  04D4  0008               	return
  1580                           
  1581                           ;main.c: 406: }
  1582                           ;main.c: 407: car_data = car_data>>1;
  1583                           
  1584                           ;main.c: 404: {
  1585                           ;main.c: 405: return;
  1586  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1587  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1588  04D7  0D4F               	rlf	_car_data+1,w
  1589  04D8  0C4F               	rrf	_car_data+1,w
  1590  04D9  00CF               	movwf	_car_data+1
  1591  04DA  0C4E               	rrf	_car_data,w
  1592  04DB  00CE               	movwf	_car_data
  1593                           
  1594                           ;main.c: 408: stop_repeat = 0X03;
  1595  04DC  3003               	movlw	3
  1596  04DD  00F2               	movwf	_stop_repeat
  1597  04DE  3000               	movlw	0
  1598  04DF  00F3               	movwf	_stop_repeat+1
  1599                           
  1600                           ;main.c: 409: button_timer= button_adjust;
  1601  04E0  084D               	movf	_button_adjust+1,w
  1602  04E1  00A3               	movwf	_button_timer+1
  1603  04E2  084C               	movf	_button_adjust,w
  1604  04E3  00A2               	movwf	_button_timer
  1605  04E4  0008               	return
  1606  04E5                     __end_of_go_left:	
  1607                           ;main.c: 410: return;
  1608                           
  1609                           
  1610                           	psect	text9
  1611  04C2                     __ptext9:	
  1612 ;; *************** function _button_time *****************
  1613 ;; Defined at:
  1614 ;;		line 438 in file "main.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1628 ;;      Params:         0       0       0       0
  1629 ;;      Locals:         0       0       0       0
  1630 ;;      Temps:          0       0       0       0
  1631 ;;      Totals:         0       0       0       0
  1632 ;;Total ram usage:        0 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_display
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           
  1642                           ;psect for function _button_time
  1643  04C2                     _button_time:	
  1644                           
  1645                           ;main.c: 440: button_timer--;
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in _button_time: [wreg+status,2+status,0]
  1649  04C2  30FF               	movlw	255
  1650  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1651  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1652  04C5  07A2               	addwf	_button_timer,f
  1653  04C6  1803               	skipnc
  1654  04C7  0AA3               	incf	_button_timer+1,f
  1655  04C8  30FF               	movlw	255
  1656  04C9  07A3               	addwf	_button_timer+1,f
  1657                           
  1658                           ;main.c: 441: if(button_timer!=0)
  1659  04CA  0822               	movf	_button_timer,w
  1660  04CB  0423               	iorwf	_button_timer+1,w
  1661  04CC  1D03               	btfss	3,2
  1662  04CD  0008               	return
  1663                           
  1664                           ;main.c: 444: }
  1665                           ;main.c: 445: stop_repeat|=0X03;
  1666                           
  1667                           ;main.c: 442: {
  1668                           ;main.c: 443: return;
  1669  04CE  3003               	movlw	3
  1670  04CF  04F2               	iorwf	_stop_repeat,f
  1671  04D0  3000               	movlw	0
  1672  04D1  04F3               	iorwf	_stop_repeat+1,f
  1673  04D2  0008               	return
  1674  04D3                     __end_of_button_time:	
  1675                           ;main.c: 447: return;
  1676                           
  1677                           
  1678                           	psect	text10
  1679  0517                     __ptext10:	
  1680 ;; *************** function _collided_data *****************
  1681 ;; Defined at:
  1682 ;;		line 85 in file "main.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1696 ;;      Params:         0       0       0       0
  1697 ;;      Locals:         0       0       0       0
  1698 ;;      Temps:          0       0       0       0
  1699 ;;      Totals:         0       0       0       0
  1700 ;;Total ram usage:        0 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    2
  1703 ;; This function calls:
  1704 ;;		_collided
  1705 ;;		_delay
  1706 ;;		_end_data
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function _collided_data
  1714  0517                     _collided_data:	
  1715                           
  1716                           ;main.c: 88: for( i =0; i<7;i++)
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in _collided_data: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1720  0517  01F0               	clrf	_i
  1721  0518  01F1               	clrf	_i+1
  1722  0519  0871               	movf	_i+1,w
  1723  051A  3A80               	xorlw	128
  1724  051B  00FF               	movwf	127
  1725  051C  3080               	movlw	128
  1726  051D  027F               	subwf	127,w
  1727  051E  1D03               	skipz
  1728  051F  2D22               	goto	u525
  1729  0520  3007               	movlw	7
  1730  0521  0270               	subwf	_i,w
  1731  0522                     u525:	
  1732  0522  1803               	btfsc	3,0
  1733  0523  2D37               	goto	l1828
  1734  0524                     l1820:	
  1735                           
  1736                           ;main.c: 89: {
  1737                           ;main.c: 91: end_data();
  1738  0524  271F               	fcall	_end_data
  1739                           
  1740                           ;main.c: 92: delay();
  1741  0525  24F7               	fcall	_delay
  1742  0526  3001               	movlw	1
  1743  0527  07F0               	addwf	_i,f
  1744  0528  1803               	skipnc
  1745  0529  0AF1               	incf	_i+1,f
  1746  052A  3000               	movlw	0
  1747  052B  07F1               	addwf	_i+1,f
  1748  052C  0871               	movf	_i+1,w
  1749  052D  3A80               	xorlw	128
  1750  052E  00FF               	movwf	127
  1751  052F  3080               	movlw	128
  1752  0530  027F               	subwf	127,w
  1753  0531  1D03               	skipz
  1754  0532  2D35               	goto	u535
  1755  0533  3007               	movlw	7
  1756  0534  0270               	subwf	_i,w
  1757  0535                     u535:	
  1758  0535  1C03               	skipc
  1759  0536  2D24               	goto	l1820
  1760  0537                     l1828:	
  1761                           
  1762                           ;main.c: 95: }
  1763                           ;main.c: 97: end_data();
  1764  0537  271F               	fcall	_end_data
  1765                           
  1766                           ;main.c: 98: delay();
  1767  0538  24F7               	fcall	_delay
  1768                           
  1769                           ;main.c: 99: collided();
  1770  0539  2643               	fcall	_collided
  1771  053A  0008               	return
  1772  053B                     __end_of_collided_data:	
  1773                           ;main.c: 100: return;
  1774                           
  1775                           
  1776                           	psect	text11
  1777  04F7                     __ptext11:	
  1778 ;; *************** function _delay *****************
  1779 ;; Defined at:
  1780 ;;		line 216 in file "main.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1794 ;;      Params:         0       0       0       0
  1795 ;;      Locals:         0       0       0       0
  1796 ;;      Temps:          0       0       0       0
  1797 ;;      Totals:         0       0       0       0
  1798 ;;Total ram usage:        0 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_collided_data
  1804 ;;		_display
  1805 ;;		_car
  1806 ;;		_track_data
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function _delay
  1812  04F7                     _delay:	
  1813                           
  1814                           ;main.c: 219: counta = 3;
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _delay: [wreg+status,2+status,0]
  1818  04F7  3003               	movlw	3
  1819  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1820  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1821  04FA  00C6               	movwf	_counta
  1822  04FB  3000               	movlw	0
  1823  04FC  00C7               	movwf	_counta+1
  1824                           
  1825                           ;main.c: 220: countb = 3;
  1826  04FD  3003               	movlw	3
  1827  04FE  00C4               	movwf	_countb
  1828  04FF  3000               	movlw	0
  1829  0500  00C5               	movwf	_countb+1
  1830  0501                     l1566:	
  1831                           ;main.c: 221: while(counta != 0)
  1832                           
  1833  0501  0846               	movf	_counta,w
  1834  0502  0447               	iorwf	_counta+1,w
  1835  0503  1903               	btfsc	3,2
  1836  0504  2D12               	goto	l1570
  1837                           
  1838                           ;main.c: 222: {
  1839                           ;main.c: 223: counta--;
  1840  0505  30FF               	movlw	255
  1841  0506  07C6               	addwf	_counta,f
  1842  0507  1803               	skipnc
  1843  0508  0AC7               	incf	_counta+1,f
  1844  0509  30FF               	movlw	255
  1845  050A  07C7               	addwf	_counta+1,f
  1846  050B  2D01               	goto	l1566
  1847  050C                     l1568:	
  1848                           ;main.c: 224: }
  1849                           ;main.c: 225: while(countb != 0)
  1850                           
  1851                           
  1852                           ;main.c: 226: {
  1853                           ;main.c: 227: countb--;
  1854  050C  30FF               	movlw	255
  1855  050D  07C4               	addwf	_countb,f
  1856  050E  1803               	skipnc
  1857  050F  0AC5               	incf	_countb+1,f
  1858  0510  30FF               	movlw	255
  1859  0511  07C5               	addwf	_countb+1,f
  1860  0512                     l1570:	
  1861  0512  0844               	movf	_countb,w
  1862  0513  0445               	iorwf	_countb+1,w
  1863  0514  1903               	btfsc	3,2
  1864  0515  0008               	return
  1865  0516  2D0C               	goto	l1568
  1866  0517                     __end_of_delay:	
  1867                           
  1868                           	psect	text12
  1869  0643                     __ptext12:	
  1870 ;; *************** function _collided *****************
  1871 ;; Defined at:
  1872 ;;		line 104 in file "main.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1886 ;;      Params:         0       0       0       0
  1887 ;;      Locals:         0       0       0       0
  1888 ;;      Temps:          1       0       0       0
  1889 ;;      Totals:         1       0       0       0
  1890 ;;Total ram usage:        1 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    1
  1893 ;; This function calls:
  1894 ;;		_end_data
  1895 ;;		_setup
  1896 ;; This function is called by:
  1897 ;;		_collided_data
  1898 ;;		_check_collision
  1899 ;;		_track_data
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _collided
  1905  0643                     _collided:	
  1906  0643                     l101:	
  1907                           ;incstack = 0
  1908                           ; Regs used in _collided: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1909                           ;main.c: 106: loop:PORTB=(0X00) ;
  1910                           
  1911  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0645  0186               	clrf	6	;volatile
  1914                           
  1915                           ;main.c: 107: PORTB=(0b00001000);
  1916  0646  3008               	movlw	8
  1917  0647  0086               	movwf	6	;volatile
  1918                           
  1919                           ;main.c: 109: if((level & 0X01 )== 0X01)
  1920  0648  187C               	btfsc	_level,0
  1921                           
  1922                           ;main.c: 110: {
  1923                           ;main.c: 111: pc_end_graphics = 0;
  1924  0649  01D0               	clrf	_pc_end_graphics
  1925                           
  1926                           ;main.c: 113: }
  1927                           ;main.c: 114: if((level & 0X02 )== 0X02)
  1928  064A  1CFC               	btfss	_level,1
  1929  064B  2E50               	goto	l1584
  1930                           
  1931                           ;main.c: 115: {
  1932                           ;main.c: 116: pc_end_graphics = 8;
  1933  064C  3008               	movlw	8
  1934  064D  00F8               	movwf	??_collided
  1935  064E  0878               	movf	??_collided,w
  1936  064F  00D0               	movwf	_pc_end_graphics
  1937  0650                     l1584:	
  1938                           
  1939                           ;main.c: 118: }
  1940                           ;main.c: 119: if((level & 0X04 )== 0X04)
  1941  0650  1D7C               	btfss	_level,2
  1942  0651  2E56               	goto	l1588
  1943                           
  1944                           ;main.c: 120: {
  1945                           ;main.c: 121: pc_end_graphics = 16;
  1946  0652  3010               	movlw	16
  1947  0653  00F8               	movwf	??_collided
  1948  0654  0878               	movf	??_collided,w
  1949  0655  00D0               	movwf	_pc_end_graphics
  1950  0656                     l1588:	
  1951                           
  1952                           ;main.c: 123: }
  1953                           ;main.c: 124: if((level & 0X08 )== 0X08)
  1954  0656  1DFC               	btfss	_level,3
  1955  0657  2E5C               	goto	l1592
  1956                           
  1957                           ;main.c: 125: {
  1958                           ;main.c: 126: pc_end_graphics = 24;
  1959  0658  3018               	movlw	24
  1960  0659  00F8               	movwf	??_collided
  1961  065A  0878               	movf	??_collided,w
  1962  065B  00D0               	movwf	_pc_end_graphics
  1963  065C                     l1592:	
  1964                           
  1965                           ;main.c: 128: }
  1966                           ;main.c: 129: if((level & 0X10 )== 0X10)
  1967  065C  1E7C               	btfss	_level,4
  1968  065D  2E62               	goto	l1596
  1969                           
  1970                           ;main.c: 130: {
  1971                           ;main.c: 131: pc_end_graphics = 32;
  1972  065E  3020               	movlw	32
  1973  065F  00F8               	movwf	??_collided
  1974  0660  0878               	movf	??_collided,w
  1975  0661  00D0               	movwf	_pc_end_graphics
  1976  0662                     l1596:	
  1977                           
  1978                           ;main.c: 133: }
  1979                           ;main.c: 134: if((level & 0X20 )== 0X20)
  1980  0662  1EFC               	btfss	_level,5
  1981  0663  2E68               	goto	l1600
  1982                           
  1983                           ;main.c: 135: {
  1984                           ;main.c: 136: pc_end_graphics = 40;
  1985  0664  3028               	movlw	40
  1986  0665  00F8               	movwf	??_collided
  1987  0666  0878               	movf	??_collided,w
  1988  0667  00D0               	movwf	_pc_end_graphics
  1989  0668                     l1600:	
  1990                           
  1991                           ;main.c: 138: }
  1992                           ;main.c: 139: if((level & 0X40 )== 0X40)
  1993  0668  1F7C               	btfss	_level,6
  1994  0669  2E6E               	goto	l1604
  1995                           
  1996                           ;main.c: 140: {
  1997                           ;main.c: 141: pc_end_graphics = 48;
  1998  066A  3030               	movlw	48
  1999  066B  00F8               	movwf	??_collided
  2000  066C  0878               	movf	??_collided,w
  2001  066D  00D0               	movwf	_pc_end_graphics
  2002  066E                     l1604:	
  2003                           
  2004                           ;main.c: 143: }
  2005                           ;main.c: 144: if((level & 0X80 )== 0X80)
  2006  066E  1FFC               	btfss	_level,7
  2007  066F  2E74               	goto	l109
  2008                           
  2009                           ;main.c: 145: {
  2010                           ;main.c: 146: pc_end_graphics = 56;
  2011  0670  3038               	movlw	56
  2012  0671  00F8               	movwf	??_collided
  2013  0672  0878               	movf	??_collided,w
  2014  0673  00D0               	movwf	_pc_end_graphics
  2015  0674                     l109:	
  2016                           
  2017                           ;main.c: 148: }
  2018                           ;main.c: 151: end_hold--;
  2019  0674  30FF               	movlw	255
  2020  0675  07C8               	addwf	_end_hold,f
  2021  0676  1803               	skipnc
  2022  0677  0AC9               	incf	_end_hold+1,f
  2023  0678  30FF               	movlw	255
  2024  0679  07C9               	addwf	_end_hold+1,f
  2025                           
  2026                           ;main.c: 152: if(end_hold!=0)
  2027  067A  0848               	movf	_end_hold,w
  2028  067B  0449               	iorwf	_end_hold+1,w
  2029  067C  1903               	btfsc	3,2
  2030  067D  2E9F               	goto	l1624
  2031                           
  2032                           ;main.c: 153: {
  2033                           ;main.c: 154: for( i =0; i<7;i++)
  2034  067E  01F0               	clrf	_i
  2035  067F  01F1               	clrf	_i+1
  2036  0680  0871               	movf	_i+1,w
  2037  0681  3A80               	xorlw	128
  2038  0682  00FF               	movwf	127
  2039  0683  3080               	movlw	128
  2040  0684  027F               	subwf	127,w
  2041  0685  1D03               	skipz
  2042  0686  2E89               	goto	u435
  2043  0687  3007               	movlw	7
  2044  0688  0270               	subwf	_i,w
  2045  0689                     u435:	
  2046  0689  1803               	btfsc	3,0
  2047  068A  2E9D               	goto	l1622
  2048  068B                     l1616:	
  2049                           
  2050                           ;main.c: 155: {
  2051                           ;main.c: 156: end_data();
  2052  068B  271F               	fcall	_end_data
  2053  068C  3001               	movlw	1
  2054  068D  07F0               	addwf	_i,f
  2055  068E  1803               	skipnc
  2056  068F  0AF1               	incf	_i+1,f
  2057  0690  3000               	movlw	0
  2058  0691  07F1               	addwf	_i+1,f
  2059  0692  0871               	movf	_i+1,w
  2060  0693  3A80               	xorlw	128
  2061  0694  00FF               	movwf	127
  2062  0695  3080               	movlw	128
  2063  0696  027F               	subwf	127,w
  2064  0697  1D03               	skipz
  2065  0698  2E9B               	goto	u445
  2066  0699  3007               	movlw	7
  2067  069A  0270               	subwf	_i,w
  2068  069B                     u445:	
  2069  069B  1C03               	skipc
  2070  069C  2E8B               	goto	l1616
  2071  069D                     l1622:	
  2072                           
  2073                           ;main.c: 159: }
  2074                           ;main.c: 160: end_data();
  2075  069D  271F               	fcall	_end_data
  2076                           
  2077                           ;main.c: 161: goto loop;
  2078  069E  2E43               	goto	l101
  2079  069F                     l1624:	
  2080                           
  2081                           ;main.c: 162: }
  2082                           ;main.c: 163: end_hold = 1;
  2083  069F  3001               	movlw	1
  2084  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2085  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2086  06A2  00C8               	movwf	_end_hold
  2087  06A3  3000               	movlw	0
  2088  06A4  00C9               	movwf	_end_hold+1
  2089                           
  2090                           ;main.c: 165: if(PORTAbits.RA7==0X00)
  2091  06A5  1B85               	btfsc	5,7	;volatile
  2092  06A6  2EA8               	goto	l1630
  2093                           
  2094                           ;main.c: 166: {
  2095                           ;main.c: 167: setup();
  2096  06A7  253B               	fcall	_setup
  2097  06A8                     l1630:	
  2098                           
  2099                           ;main.c: 168: }
  2100                           ;main.c: 170: if(PORTAbits.RA6==0X00)
  2101  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  2102  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  2103  06AA  1B05               	btfsc	5,6	;volatile
  2104  06AB  0008               	return
  2105                           
  2106                           ;main.c: 171: {
  2107                           ;main.c: 172: setup() ;
  2108  06AC  253B               	fcall	_setup
  2109  06AD  0008               	return
  2110  06AE                     __end_of_collided:	
  2111                           
  2112                           	psect	text13
  2113  053B                     __ptext13:	
  2114 ;; *************** function _setup *****************
  2115 ;; Defined at:
  2116 ;;		line 58 in file "main.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2130 ;;      Params:         0       0       0       0
  2131 ;;      Locals:         0       0       0       0
  2132 ;;      Temps:          0       0       0       0
  2133 ;;      Totals:         0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_collided
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _setup
  2146  053B                     _setup:	
  2147                           
  2148                           ;main.c: 60: TRISA= (0b11110111);
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _setup: [wreg+status,2]
  2152  053B  30F7               	movlw	247
  2153  053C  1683               	bsf	3,5	;RP0=1, select bank1
  2154  053D  1303               	bcf	3,6	;RP1=0, select bank1
  2155  053E  0085               	movwf	5	;volatile
  2156                           
  2157                           ;main.c: 61: PORTA=( 0b00001000);
  2158  053F  3008               	movlw	8
  2159  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0542  0085               	movwf	5	;volatile
  2162                           
  2163                           ;main.c: 62: PORTB=(0X00);
  2164  0543  0186               	clrf	6	;volatile
  2165                           
  2166                           ;main.c: 64: vram_1= 0X00;
  2167  0544  01F4               	clrf	_vram_1
  2168  0545  01F5               	clrf	_vram_1+1
  2169                           
  2170                           ;main.c: 65: vram_2= 0X00;
  2171  0546  01C2               	clrf	_vram_2
  2172  0547  01C3               	clrf	_vram_2+1
  2173                           
  2174                           ;main.c: 66: vram_3= 0X00;
  2175  0548  01C0               	clrf	_vram_3
  2176  0549  01C1               	clrf	_vram_3+1
  2177                           
  2178                           ;main.c: 67: vram_4= 0X00;
  2179  054A  01BE               	clrf	_vram_4
  2180  054B  01BF               	clrf	_vram_4+1
  2181                           
  2182                           ;main.c: 68: vram_5= 0X00;
  2183  054C  01BC               	clrf	_vram_5
  2184  054D  01BD               	clrf	_vram_5+1
  2185                           
  2186                           ;main.c: 69: vram_6= 0X00;
  2187  054E  01BA               	clrf	_vram_6
  2188  054F  01BB               	clrf	_vram_6+1
  2189                           
  2190                           ;main.c: 70: vram_7= 0X00;
  2191  0550  01B8               	clrf	_vram_7
  2192  0551  01B9               	clrf	_vram_7+1
  2193                           
  2194                           ;main.c: 71: vram_8= 0X00;
  2195  0552  01B6               	clrf	_vram_8
  2196  0553  01B7               	clrf	_vram_8+1
  2197                           
  2198                           ;main.c: 74: stop_repeat = 0;
  2199  0554  01F2               	clrf	_stop_repeat
  2200  0555  01F3               	clrf	_stop_repeat+1
  2201                           
  2202                           ;main.c: 75: pc_track = 0;
  2203  0556  01F6               	clrf	_pc_track
  2204                           
  2205                           ;main.c: 76: pc_end_graphics = 0;
  2206  0557  01D0               	clrf	_pc_end_graphics
  2207                           
  2208                           ;main.c: 77: car_data = 0b00010000;
  2209  0558  3010               	movlw	16
  2210  0559  00CE               	movwf	_car_data
  2211  055A  3000               	movlw	0
  2212  055B  00CF               	movwf	_car_data+1
  2213                           
  2214                           ;main.c: 78: button_adjust = 8;
  2215  055C  3008               	movlw	8
  2216  055D  00CC               	movwf	_button_adjust
  2217  055E  3000               	movlw	0
  2218  055F  00CD               	movwf	_button_adjust+1
  2219                           
  2220                           ;main.c: 79: level = 1;
  2221  0560  3001               	movlw	1
  2222  0561  00FC               	movwf	_level
  2223  0562  3000               	movlw	0
  2224  0563  00FD               	movwf	_level+1
  2225                           
  2226                           ;main.c: 80: speed = 10;
  2227  0564  300A               	movlw	10
  2228  0565  00CA               	movwf	_speed
  2229  0566  3000               	movlw	0
  2230  0567  00CB               	movwf	_speed+1
  2231                           
  2232                           ;main.c: 81: end_hold = 50;
  2233  0568  3032               	movlw	50
  2234  0569  00C8               	movwf	_end_hold
  2235  056A  3000               	movlw	0
  2236  056B  00C9               	movwf	_end_hold+1
  2237  056C  0008               	return
  2238  056D                     __end_of_setup:	
  2239                           
  2240                           	psect	text14
  2241  071F                     __ptext14:	
  2242 ;; *************** function _end_data *****************
  2243 ;; Defined at:
  2244 ;;		line 232 in file "main.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      unsigned char 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2258 ;;      Params:         0       0       0       0
  2259 ;;      Locals:         0       0       0       0
  2260 ;;      Temps:          1       0       0       0
  2261 ;;      Totals:         1       0       0       0
  2262 ;;Total ram usage:        1 bytes
  2263 ;; Hardware stack levels used:    1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_collided_data
  2268 ;;		_collided
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _end_data
  2274  071F                     _end_data:	
  2275                           
  2276                           ;main.c: 235: pc_end_graphics++;
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in _end_data: [wreg-fsr0h+status,2+status,0]
  2280  071F  3001               	movlw	1
  2281  0720  00F7               	movwf	??_end_data
  2282  0721  0877               	movf	??_end_data,w
  2283  0722  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0723  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0724  07D0               	addwf	_pc_end_graphics,f
  2286                           
  2287                           ;main.c: 237: switch(pc_end_graphics)
  2288  0725  2FE6               	goto	l1540
  2289  0726                     l1410:	
  2290                           ;main.c: 238: {
  2291                           ;main.c: 240: case 1: PORTB=(0b00011000); break;
  2292                           
  2293  0726  3018               	movlw	24
  2294  0727  0086               	movwf	6	;volatile
  2295  0728  0008               	return
  2296  0729                     l1412:	
  2297                           ;main.c: 241: case 2: PORTB=(0b00111000); break;
  2298                           
  2299  0729  3038               	movlw	56
  2300  072A  0086               	movwf	6	;volatile
  2301  072B  0008               	return
  2302  072C                     l1414:	
  2303                           ;main.c: 242: case 3: PORTB=(0b01111000); break;
  2304                           
  2305  072C  3078               	movlw	120
  2306  072D  0086               	movwf	6	;volatile
  2307  072E  0008               	return
  2308  072F                     l1416:	
  2309                           ;main.c: 243: case 4: PORTB=(0b00011000); break;
  2310                           
  2311  072F  3018               	movlw	24
  2312  0730  0086               	movwf	6	;volatile
  2313  0731  0008               	return
  2314  0732                     l1418:	
  2315                           ;main.c: 244: case 5: PORTB=(0b00011000); break;
  2316                           
  2317  0732  3018               	movlw	24
  2318  0733  0086               	movwf	6	;volatile
  2319  0734  0008               	return
  2320  0735                     l1420:	
  2321                           ;main.c: 245: case 6: PORTB=(0b00011000); break;
  2322                           
  2323  0735  3018               	movlw	24
  2324  0736  0086               	movwf	6	;volatile
  2325  0737  0008               	return
  2326  0738                     l1422:	
  2327                           ;main.c: 246: case 7: PORTB=(0b01111110); break;
  2328                           
  2329  0738  307E               	movlw	126
  2330  0739  0086               	movwf	6	;volatile
  2331  073A  0008               	return
  2332  073B                     l1424:	
  2333                           ;main.c: 247: case 8: PORTB=(0b01111110); break;
  2334                           
  2335  073B  307E               	movlw	126
  2336  073C  0086               	movwf	6	;volatile
  2337  073D  0008               	return
  2338  073E                     l1426:	
  2339                           ;main.c: 250: case 9: PORTB=(0b00111000); break;
  2340                           
  2341  073E  3038               	movlw	56
  2342  073F  0086               	movwf	6	;volatile
  2343  0740  0008               	return
  2344  0741                     l1428:	
  2345                           ;main.c: 251: case 10: PORTB=(0b01111100); break;
  2346                           
  2347  0741  307C               	movlw	124
  2348  0742  0086               	movwf	6	;volatile
  2349  0743  0008               	return
  2350  0744                     l1430:	
  2351                           ;main.c: 252: case 11: PORTB=(0b11000110); break;
  2352                           
  2353  0744  30C6               	movlw	198
  2354  0745  0086               	movwf	6	;volatile
  2355  0746  0008               	return
  2356  0747                     l1432:	
  2357                           ;main.c: 253: case 12: PORTB=(0b00001100); break;
  2358                           
  2359  0747  300C               	movlw	12
  2360  0748  0086               	movwf	6	;volatile
  2361  0749  0008               	return
  2362  074A                     l1434:	
  2363                           ;main.c: 254: case 13: PORTB=(0b00011000); break;
  2364                           
  2365  074A  3018               	movlw	24
  2366  074B  0086               	movwf	6	;volatile
  2367  074C  0008               	return
  2368  074D                     l1436:	
  2369                           ;main.c: 255: case 14: PORTB=(0b00110000); break;
  2370                           
  2371  074D  3030               	movlw	48
  2372  074E  0086               	movwf	6	;volatile
  2373  074F  0008               	return
  2374  0750                     l1438:	
  2375                           ;main.c: 256: case 15: PORTB=(0b01111110); break;
  2376                           
  2377  0750  307E               	movlw	126
  2378  0751  0086               	movwf	6	;volatile
  2379  0752  0008               	return
  2380  0753                     l1440:	
  2381                           ;main.c: 257: case 16: PORTB=(0b11111110); break;
  2382                           
  2383  0753  30FE               	movlw	254
  2384  0754  0086               	movwf	6	;volatile
  2385  0755  0008               	return
  2386  0756                     l1442:	
  2387                           ;main.c: 260: case 17: PORTB=(0b00111100); break;
  2388                           
  2389  0756  303C               	movlw	60
  2390  0757  0086               	movwf	6	;volatile
  2391  0758  0008               	return
  2392  0759                     l1444:	
  2393                           ;main.c: 261: case 18: PORTB=(0b01111110); break;
  2394                           
  2395  0759  307E               	movlw	126
  2396  075A  0086               	movwf	6	;volatile
  2397  075B  0008               	return
  2398  075C                     l1446:	
  2399                           ;main.c: 262: case 19: PORTB=(0b00000110); break;
  2400                           
  2401  075C  3006               	movlw	6
  2402  075D  0086               	movwf	6	;volatile
  2403  075E  0008               	return
  2404  075F                     l1448:	
  2405                           ;main.c: 263: case 20: PORTB=(0b00111110); break;
  2406                           
  2407  075F  303E               	movlw	62
  2408  0760  0086               	movwf	6	;volatile
  2409  0761  0008               	return
  2410  0762                     l1450:	
  2411                           ;main.c: 264: case 21: PORTB=(0b00111110); break;
  2412                           
  2413  0762  303E               	movlw	62
  2414  0763  0086               	movwf	6	;volatile
  2415  0764  0008               	return
  2416  0765                     l1452:	
  2417                           ;main.c: 265: case 22: PORTB=(0b00000110); break;
  2418                           
  2419  0765  3006               	movlw	6
  2420  0766  0086               	movwf	6	;volatile
  2421  0767  0008               	return
  2422  0768                     l1454:	
  2423                           ;main.c: 266: case 23: PORTB=(0b01111110); break;
  2424                           
  2425  0768  307E               	movlw	126
  2426  0769  0086               	movwf	6	;volatile
  2427  076A  0008               	return
  2428  076B                     l1456:	
  2429                           ;main.c: 267: case 24: PORTB=(0b00111100); break;
  2430                           
  2431  076B  303C               	movlw	60
  2432  076C  0086               	movwf	6	;volatile
  2433  076D  0008               	return
  2434  076E                     l1458:	
  2435                           ;main.c: 269: case 25: PORTB=(0b01100110);break;
  2436                           
  2437  076E  3066               	movlw	102
  2438  076F  0086               	movwf	6	;volatile
  2439  0770  0008               	return
  2440  0771                     l1460:	
  2441                           ;main.c: 270: case 26: PORTB=(0b01100110);break;
  2442                           
  2443  0771  3066               	movlw	102
  2444  0772  0086               	movwf	6	;volatile
  2445  0773  0008               	return
  2446  0774                     l1462:	
  2447                           ;main.c: 271: case 27: PORTB=(0b01100110);break;
  2448                           
  2449  0774  3066               	movlw	102
  2450  0775  0086               	movwf	6	;volatile
  2451  0776  0008               	return
  2452  0777                     l1464:	
  2453                           ;main.c: 272: case 28: PORTB=(0b01100110);break;
  2454                           
  2455  0777  3066               	movlw	102
  2456  0778  0086               	movwf	6	;volatile
  2457  0779  0008               	return
  2458  077A                     l1466:	
  2459                           ;main.c: 273: case 29: PORTB=(0b01111110);break;
  2460                           
  2461  077A  307E               	movlw	126
  2462  077B  0086               	movwf	6	;volatile
  2463  077C  0008               	return
  2464  077D                     l1468:	
  2465                           ;main.c: 274: case 30: PORTB=(0b00111110);break;
  2466                           
  2467  077D  303E               	movlw	62
  2468  077E  0086               	movwf	6	;volatile
  2469  077F  0008               	return
  2470  0780                     l1470:	
  2471                           ;main.c: 275: case 31: PORTB=(0b00000110);break;
  2472                           
  2473  0780  3006               	movlw	6
  2474  0781  0086               	movwf	6	;volatile
  2475  0782  0008               	return
  2476  0783                     l1472:	
  2477                           ;main.c: 276: case 32: PORTB=(0b00000110);break;
  2478                           
  2479  0783  3006               	movlw	6
  2480  0784  0086               	movwf	6	;volatile
  2481  0785  0008               	return
  2482  0786                     l1474:	
  2483                           ;main.c: 278: case 33: PORTB=(0b01111110);break;
  2484                           
  2485  0786  307E               	movlw	126
  2486  0787  0086               	movwf	6	;volatile
  2487  0788  0008               	return
  2488  0789                     l1476:	
  2489                           ;main.c: 279: case 34: PORTB=(0b01111110);break;
  2490                           
  2491  0789  307E               	movlw	126
  2492  078A  0086               	movwf	6	;volatile
  2493  078B  0008               	return
  2494  078C                     l1478:	
  2495                           ;main.c: 280: case 35: PORTB=(0b01100000);break;
  2496                           
  2497  078C  3060               	movlw	96
  2498  078D  0086               	movwf	6	;volatile
  2499  078E  0008               	return
  2500  078F                     l1480:	
  2501                           ;main.c: 281: case 36: PORTB=(0b01111100);break;
  2502                           
  2503  078F  307C               	movlw	124
  2504  0790  0086               	movwf	6	;volatile
  2505  0791  0008               	return
  2506  0792                     l1482:	
  2507                           ;main.c: 282: case 37: PORTB=(0b01111110);break;
  2508                           
  2509  0792  307E               	movlw	126
  2510  0793  0086               	movwf	6	;volatile
  2511  0794  0008               	return
  2512  0795                     l1484:	
  2513                           ;main.c: 283: case 38: PORTB=(0b00000110);break;
  2514                           
  2515  0795  3006               	movlw	6
  2516  0796  0086               	movwf	6	;volatile
  2517  0797  0008               	return
  2518  0798                     l1486:	
  2519                           ;main.c: 284: case 39: PORTB=(0b01111110);break;
  2520                           
  2521  0798  307E               	movlw	126
  2522  0799  0086               	movwf	6	;volatile
  2523  079A  0008               	return
  2524  079B                     l1488:	
  2525                           ;main.c: 285: case 40: PORTB=(0b01111100);break;
  2526                           
  2527  079B  307C               	movlw	124
  2528  079C  0086               	movwf	6	;volatile
  2529  079D  0008               	return
  2530  079E                     l1490:	
  2531                           ;main.c: 287: case 41: PORTB=(0b00111110);break;
  2532                           
  2533  079E  303E               	movlw	62
  2534  079F  0086               	movwf	6	;volatile
  2535  07A0  0008               	return
  2536  07A1                     l1492:	
  2537                           ;main.c: 288: case 42: PORTB=(0b01111110);break;
  2538                           
  2539  07A1  307E               	movlw	126
  2540  07A2  0086               	movwf	6	;volatile
  2541  07A3  0008               	return
  2542  07A4                     l1494:	
  2543                           ;main.c: 289: case 43: PORTB=(0b01100000);break;
  2544                           
  2545  07A4  3060               	movlw	96
  2546  07A5  0086               	movwf	6	;volatile
  2547  07A6  0008               	return
  2548  07A7                     l1496:	
  2549                           ;main.c: 290: case 44: PORTB=(0b01111100);break;
  2550                           
  2551  07A7  307C               	movlw	124
  2552  07A8  0086               	movwf	6	;volatile
  2553  07A9  0008               	return
  2554  07AA                     l1498:	
  2555                           ;main.c: 291: case 45: PORTB=(0b01111110);break;
  2556                           
  2557  07AA  307E               	movlw	126
  2558  07AB  0086               	movwf	6	;volatile
  2559  07AC  0008               	return
  2560  07AD                     l1500:	
  2561                           ;main.c: 292: case 46: PORTB=(0b01100110);break;
  2562                           
  2563  07AD  3066               	movlw	102
  2564  07AE  0086               	movwf	6	;volatile
  2565  07AF  0008               	return
  2566  07B0                     l1502:	
  2567                           ;main.c: 293: case 47: PORTB=(0b01111110);break;
  2568                           
  2569  07B0  307E               	movlw	126
  2570  07B1  0086               	movwf	6	;volatile
  2571  07B2  0008               	return
  2572  07B3                     l1504:	
  2573                           ;main.c: 294: case 48: PORTB=(0b00111100);break;
  2574                           
  2575  07B3  303C               	movlw	60
  2576  07B4  0086               	movwf	6	;volatile
  2577  07B5  0008               	return
  2578  07B6                     l1506:	
  2579                           ;main.c: 296: case 49: PORTB=(0b01111111);break;
  2580                           
  2581  07B6  307F               	movlw	127
  2582  07B7  0086               	movwf	6	;volatile
  2583  07B8  0008               	return
  2584  07B9                     l1508:	
  2585                           ;main.c: 297: case 50: PORTB=(0b01111111);break;
  2586                           
  2587  07B9  307F               	movlw	127
  2588  07BA  0086               	movwf	6	;volatile
  2589  07BB  0008               	return
  2590  07BC                     l1510:	
  2591                           ;main.c: 298: case 51: PORTB=(0b00000011);break;
  2592                           
  2593  07BC  3003               	movlw	3
  2594  07BD  0086               	movwf	6	;volatile
  2595  07BE  0008               	return
  2596  07BF                     l1512:	
  2597                           ;main.c: 299: case 52: PORTB=(0b00000110);break;
  2598                           
  2599  07BF  3006               	movlw	6
  2600  07C0  0086               	movwf	6	;volatile
  2601  07C1  0008               	return
  2602  07C2                     l1514:	
  2603                           ;main.c: 300: case 53: PORTB=(0b00001100);break;
  2604                           
  2605  07C2  300C               	movlw	12
  2606  07C3  0086               	movwf	6	;volatile
  2607  07C4  0008               	return
  2608  07C5                     l1516:	
  2609                           ;main.c: 301: case 54: PORTB=(0b00011000);break;
  2610                           
  2611  07C5  3018               	movlw	24
  2612  07C6  0086               	movwf	6	;volatile
  2613  07C7  0008               	return
  2614  07C8                     l1518:	
  2615                           ;main.c: 302: case 55: PORTB=(0b00110000);break;
  2616                           
  2617  07C8  3030               	movlw	48
  2618  07C9  0086               	movwf	6	;volatile
  2619  07CA  0008               	return
  2620  07CB                     l1520:	
  2621                           ;main.c: 303: case 56: PORTB=(0b01100000);break;
  2622                           
  2623  07CB  3060               	movlw	96
  2624  07CC  0086               	movwf	6	;volatile
  2625  07CD  0008               	return
  2626  07CE                     l1522:	
  2627                           ;main.c: 305: case 57: PORTB=(0b00111100);break;
  2628                           
  2629  07CE  303C               	movlw	60
  2630  07CF  0086               	movwf	6	;volatile
  2631  07D0  0008               	return
  2632  07D1                     l1524:	
  2633                           ;main.c: 306: case 58: PORTB=(0b01000010);break;
  2634                           
  2635  07D1  3042               	movlw	66
  2636  07D2  0086               	movwf	6	;volatile
  2637  07D3  0008               	return
  2638  07D4                     l1526:	
  2639                           ;main.c: 307: case 59: PORTB=(0b10100101);break;
  2640                           
  2641  07D4  30A5               	movlw	165
  2642  07D5  0086               	movwf	6	;volatile
  2643  07D6  0008               	return
  2644  07D7                     l1528:	
  2645                           ;main.c: 308: case 60: PORTB=(0b10000001);break;
  2646                           
  2647  07D7  3081               	movlw	129
  2648  07D8  0086               	movwf	6	;volatile
  2649  07D9  0008               	return
  2650  07DA                     l1530:	
  2651                           ;main.c: 309: case 61: PORTB=(0b10100101);break;
  2652                           
  2653  07DA  30A5               	movlw	165
  2654  07DB  0086               	movwf	6	;volatile
  2655  07DC  0008               	return
  2656  07DD                     l1532:	
  2657                           ;main.c: 310: case 62: PORTB=(0b10011001);break;
  2658                           
  2659  07DD  3099               	movlw	153
  2660  07DE  0086               	movwf	6	;volatile
  2661  07DF  0008               	return
  2662  07E0                     l1534:	
  2663                           ;main.c: 311: case 63: PORTB=(0b01000010);break;
  2664                           
  2665  07E0  3042               	movlw	66
  2666  07E1  0086               	movwf	6	;volatile
  2667  07E2  0008               	return
  2668  07E3                     l1536:	
  2669                           ;main.c: 312: case 64: PORTB=(0b00111100);break;
  2670                           
  2671  07E3  303C               	movlw	60
  2672  07E4  0086               	movwf	6	;volatile
  2673                           
  2674                           ;main.c: 314: }
  2675                           
  2676                           ;main.c: 313: default : break;
  2677  07E5  0008               	return
  2678  07E6                     l1540:	
  2679  07E6  0850               	movf	_pc_end_graphics,w
  2680                           
  2681                           ; Switch size 1, requested type "space"
  2682                           ; Number of cases is 64, Range of values is 1 to 64
  2683                           ; switch strategies available:
  2684                           ; Name         Instructions Cycles
  2685                           ; direct_byte           73     9 (fixed)
  2686                           ; simple_byte          193    97 (average)
  2687                           ; jumptable            263     9 (fixed)
  2688                           ;	Chosen strategy is direct_byte
  2689  07E7  3EFF               	addlw	-1
  2690  07E8  1C03               	skipc
  2691  07E9  0008               	return
  2692  07EA  0084               	movwf	4
  2693  07EB  3040               	movlw	64
  2694  07EC  0204               	subwf	4,w
  2695  07ED  1803               	skipnc
  2696  07EE  0008               	return
  2697  07EF  3000               	movlw	high S1996
  2698  07F0  008A               	movwf	10
  2699  07F1  3001               	movlw	low S1996
  2700  07F2  0704               	addwf	4,w
  2701  07F3  0082               	movwf	2
  2702  07F4  0008               	return
  2703  07F5                     __end_of_end_data:	
  2704  007E                     btemp	set	126	;btemp
  2705  007E                     wtemp0	set	126
  2706                           
  2707                           	psect	swtext2
  2708  0001                     __pswtext2:	
  2709  0001                     S1996:	
  2710  0001  2F26               	ljmp	l1410
  2711  0002  2F29               	ljmp	l1412
  2712  0003  2F2C               	ljmp	l1414
  2713  0004  2F2F               	ljmp	l1416
  2714  0005  2F32               	ljmp	l1418
  2715  0006  2F35               	ljmp	l1420
  2716  0007  2F38               	ljmp	l1422
  2717  0008  2F3B               	ljmp	l1424
  2718  0009  2F3E               	ljmp	l1426
  2719  000A  2F41               	ljmp	l1428
  2720  000B  2F44               	ljmp	l1430
  2721  000C  2F47               	ljmp	l1432
  2722  000D  2F4A               	ljmp	l1434
  2723  000E  2F4D               	ljmp	l1436
  2724  000F  2F50               	ljmp	l1438
  2725  0010  2F53               	ljmp	l1440
  2726  0011  2F56               	ljmp	l1442
  2727  0012  2F59               	ljmp	l1444
  2728  0013  2F5C               	ljmp	l1446
  2729  0014  2F5F               	ljmp	l1448
  2730  0015  2F62               	ljmp	l1450
  2731  0016  2F65               	ljmp	l1452
  2732  0017  2F68               	ljmp	l1454
  2733  0018  2F6B               	ljmp	l1456
  2734  0019  2F6E               	ljmp	l1458
  2735  001A  2F71               	ljmp	l1460
  2736  001B  2F74               	ljmp	l1462
  2737  001C  2F77               	ljmp	l1464
  2738  001D  2F7A               	ljmp	l1466
  2739  001E  2F7D               	ljmp	l1468
  2740  001F  2F80               	ljmp	l1470
  2741  0020  2F83               	ljmp	l1472
  2742  0021  2F86               	ljmp	l1474
  2743  0022  2F89               	ljmp	l1476
  2744  0023  2F8C               	ljmp	l1478
  2745  0024  2F8F               	ljmp	l1480
  2746  0025  2F92               	ljmp	l1482
  2747  0026  2F95               	ljmp	l1484
  2748  0027  2F98               	ljmp	l1486
  2749  0028  2F9B               	ljmp	l1488
  2750  0029  2F9E               	ljmp	l1490
  2751  002A  2FA1               	ljmp	l1492
  2752  002B  2FA4               	ljmp	l1494
  2753  002C  2FA7               	ljmp	l1496
  2754  002D  2FAA               	ljmp	l1498
  2755  002E  2FAD               	ljmp	l1500
  2756  002F  2FB0               	ljmp	l1502
  2757  0030  2FB3               	ljmp	l1504
  2758  0031  2FB6               	ljmp	l1506
  2759  0032  2FB9               	ljmp	l1508
  2760  0033  2FBC               	ljmp	l1510
  2761  0034  2FBF               	ljmp	l1512
  2762  0035  2FC2               	ljmp	l1514
  2763  0036  2FC5               	ljmp	l1516
  2764  0037  2FC8               	ljmp	l1518
  2765  0038  2FCB               	ljmp	l1520
  2766  0039  2FCE               	ljmp	l1522
  2767  003A  2FD1               	ljmp	l1524
  2768  003B  2FD4               	ljmp	l1526
  2769  003C  2FD7               	ljmp	l1528
  2770  003D  2FDA               	ljmp	l1530
  2771  003E  2FDD               	ljmp	l1532
  2772  003F  2FE0               	ljmp	l1534
  2773  0040  2FE3               	ljmp	l1536


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         47
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0      49
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display
    _fill_vram->_track_data
    _track_data->_collided
    _check_collision->_collided
    _collided_data->_collided
    _collided->_end_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              4 COMMON     1     1      0
                      _collided_data
                            _display
                          _fill_vram
                              _setup
 ---------------------------------------------------------------------------------
 (1) _fill_vram                                            0     0      0       0
                         _track_data
 ---------------------------------------------------------------------------------
 (2) _track_data                                           1     1      0       0
                                              2 COMMON     1     1      0
                           _collided
                              _delay
 ---------------------------------------------------------------------------------
 (1) _display                                              2     2      0       0
                                              2 COMMON     2     2      0
                        _button_time
                                _car
                    _check_collision
                              _delay
 ---------------------------------------------------------------------------------
 (2) _check_collision                                      0     0      0       0
                           _collided
 ---------------------------------------------------------------------------------
 (2) _car                                                  0     0      0       0
                              _delay
                           _joystick
 ---------------------------------------------------------------------------------
 (3) _joystick                                             0     0      0       0
                            _go_left
                           _go_right
 ---------------------------------------------------------------------------------
 (4) _go_right                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _go_left                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _button_time                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _collided_data                                        0     0      0       0
                           _collided
                              _delay
                           _end_data
 ---------------------------------------------------------------------------------
 (3) _delay                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _collided                                             1     1      0       0
                                              1 COMMON     1     1      0
                           _end_data
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _end_data                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _collided_data
     _collided
       _end_data
       _setup
     _delay
     _end_data
   _display
     _button_time
     _car
       _delay
       _joystick
         _go_left
         _go_right
     _check_collision
       _collided
         _end_data
         _setup
     _delay
   _fill_vram
     _track_data
       _collided
         _end_data
         _setup
       _delay
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0      31       3       61.2%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      3F       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      3F      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 26 17:56:27 2019

                       _i 0070                         pc 0002               __CFG_CP$OFF 0000  
                      fsr 0004               __CFG_LVP$ON 0000                       l101 0643  
                     l109 0674              __CFG_CPD$OFF 0000                       u435 0689  
                     u445 069B                       u525 0522                       u535 0535  
                     _car 04AA                       indf 0000                      S1994 0041  
                    S1996 0001                      ?_car 0077                      l1410 0726  
                    l1500 07AD                      l1420 0735                      l1412 0729  
                    l1510 07BC                      l1502 07B0                      l1430 0744  
                    l1422 0738                      l1414 072C                      l1520 07CB  
                    l1512 07BF                      l1504 07B3                      l1440 0753  
                    l1432 0747                      l1424 073B                      l1416 072F  
                    l1600 0668                      l1530 07DA                      l1522 07CE  
                    l1514 07C2                      l1506 07B6                      l1450 0762  
                    l1442 0756                      l1434 074A                      l1426 073E  
                    l1418 0732                      l1532 07DD                      l1524 07D1  
                    l1516 07C5                      l1508 07B9                      l1460 0771  
                    l1452 0765                      l1444 0759                      l1436 074D  
                    l1428 0741                      l1540 07E6                      l1604 066E  
                    l1700 06BF                      l1534 07E0                      l1526 07D4  
                    l1518 07C8                      l1470 0780                      l1462 0774  
                    l1454 0768                      l1446 075C                      l1438 0750  
                    l1630 06A8                      l1622 069D                      l1710 06C2  
                    l1702 06C0                      l1536 07E3                      l1528 07D7  
                    l1480 078F                      l1472 0783                      l1464 0777  
                    l1456 076B                      l1448 075F                      l1616 068B  
                    l1624 069F                      l1720 06C6                      l1712 06C3  
                    l1704 06C1                      l1490 079E                      l1482 0792  
                    l1474 0786                      l1466 077A                      l1458 076E  
                    l1570 0512                      l1730 06CB                      l1722 06C7  
                    l1714 06C3                      l1706 06C1                      l1492 07A1  
                    l1484 0795                      l1476 0789                      l1468 077D  
                    l1820 0524                      l1804 0714                      l1740 06D0  
                    l1732 06CB                      l1724 06C8                      l1716 06C4  
                    l1708 06C1                      l1494 07A4                      l1486 0798  
                    l1478 078C                      l1566 0501                      l1638 04A4  
                    l1806 071C                      l1750 06D6                      l1742 06D2  
                    l1734 06CC                      l1726 06C8                      l1718 06C5  
                    l1496 07A7                      l1488 079B                      l1592 065C  
                    l1584 0650                      l1568 050C                      l1760 06DD  
                    l1752 06D6                      l1744 06D2                      l1736 06CD  
                    l1728 06C9                      l1680 06B6                      l1672 06B4  
                    l1498 07AA                      l1770 06E6                      l1762 06DE  
                    l1754 06D8                      l1746 06D3                      l1738 06CE  
                    l1690 06BA                      l1682 06B7                      l1674 06B4  
                    l1596 0662                      l1588 0656                      l1828 0537  
                    l1780 06EE                      l1772 06E7                      l1764 06E0  
                    l1756 06DA                      l1748 06D5                      l1692 06BB  
                    l1684 06B7                      l1676 06B5                      l1782 06EE  
                    l1774 06E8                      l1766 06E2                      l1758 06DB  
                    l1694 06BC                      l1686 06B8                      l1678 06B6  
                    l1950 059A                      l1926 0578                      l1784 06F0  
                    l1776 06EA                      l1768 06E4                      l1696 06BD  
                    l1688 06B9                      l1792 06F5                      l1944 058E  
                    l1786 06F0                      l1778 06EC                      l1698 06BE  
                    l1794 0703                      l1946 0594                      l1788 06F0  
                    l1896 063A                      l1898 05E6           _check_collision 04B6  
            __CFG_WRT$OFF 0000                      _main 056D                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0000             __CFG_MCLRE$ON 0000  
             _stop_repeat 0072                     ??_car 0077                     ?_main 0077  
           __CFG_WDTE$OFF 0000                     _PORTA 0005                     _PORTB 0006  
                   _TRISA 0085                     _TRISB 0086            __CFG_CCPMX$RB2 0000  
            ?_button_time 0077           __end_of_display 0643           __end_of_go_left 04E5  
                   _delay 04F7                     _level 007C                     _speed 004A  
                   _press 0020                     _setup 053B                     pclath 000A  
                   status 0003                     wtemp0 007E           ??_collided_data 0079  
         __initialization 07F5              __end_of_main 05A1                    ??_main 007B  
 __end_of_check_collision 04C2                    ?_delay 0077                    ?_setup 0077  
                  _STATUS 0003            __CFG_PWRTE$OFF 0000          __end_of_end_data 07F5  
        __end_of_collided 06AE          __end_of_go_right 04F7                    _counta 0046  
                  _countb 0044                    _vram_1 0074                    _vram_2 0042  
                  _vram_3 0040                    _vram_4 003E                    _vram_5 003C  
                  _vram_6 003A                    _vram_7 0038                    _vram_8 0036  
               ??_display 0079                 ??_go_left 0077          __end_of_joystick 04AA  
 __end_of__initialization 07FE            __pcstackCOMMON 0077             __end_of_delay 0517  
           __end_of_setup 056D          ?_check_collision 0077        __size_of_fill_vram 003E  
                 ??_delay 0077      __size_of_button_time 0011                   ??_setup 0077  
              __pbssBANK0 0020             _button_adjust 004C                __pnvCOMMON 007C  
              __pmaintext 056D                 ?_end_data 0077                 ?_collided 0077  
               ?_go_right 0077                 ?_joystick 0077         __end_of_fill_vram 05DF  
                 __ptext1 05A1                   __ptext2 06AE                   __ptext3 05DF  
                 __ptext4 04B6                   __ptext5 04AA                   __ptext6 049F  
                 __ptext7 04E5                   __ptext8 04D3                   __ptext9 04C2  
                 _display 05DF                   _go_left 04D3              __size_of_car 000C  
              ??_end_data 0077                   clrloop0 0498                   _vtemp_1 0034  
                 _vtemp_2 0032                   _vtemp_3 0030                   _vtemp_4 002E  
                 _vtemp_5 002C                ??_collided 0078                   _vtemp_6 002A  
                 _vtemp_7 0028                   _vtemp_8 0026      end_of_initialization 07FE  
              ??_go_right 0077     __end_of_collided_data 053B                ??_joystick 0077  
               _PORTAbits 0005                _track_data 06AE       start_initialization 07F5  
             __end_of_car 04B6           _pc_end_graphics 0050               ?_track_data 0077  
           ??_button_time 0077               __pbssCOMMON 0070                 ___latbits 0000  
       __size_of_end_data 00D6  __size_of_check_collision 000C         __size_of_collided 006B  
       __size_of_go_right 0012                 __pnvBANK0 0048              _button_timer 0022  
       __size_of_joystick 000B                 _fill_vram 05A1                 __pswtext1 0041  
               __pswtext2 0001                  ?_display 0077                  ?_go_left 0077  
          __size_of_delay 0020            __size_of_setup 0032       __end_of_button_time 04D3  
               clear_ram0 0497       __size_of_track_data 0071                ?_fill_vram 0077  
       ??_check_collision 0079              _repeat_frame 0024          __size_of_display 0064  
                _car_data 004E          __size_of_go_left 0012               _button_time 04C2  
                _end_data 071F                  __ptext10 0517                  __ptext11 04F7  
                __ptext12 0643                  __ptext13 053B                  __ptext14 071F  
  __size_of_collided_data 0024                  _end_hold 0048                  _collided 0643  
                _go_right 04E5                  _pc_track 0076             __size_of_main 0034  
                _joystick 049F               ??_fill_vram 007A              ??_track_data 0079  
      __end_of_track_data 071F             _collided_data 0517       __CFG_FOSC$INTOSCCLK 0000  
          ?_collided_data 0077  
