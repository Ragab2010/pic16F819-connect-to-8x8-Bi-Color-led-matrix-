
# 1 "main.c"


# 13
#pragma config FOSC = INTOSCCLK
#pragma config WDTE = OFF
#pragma config PWRTE = OFF
#pragma config MCLRE = ON
#pragma config BOREN = ON
#pragma config LVP = ON
#pragma config CPD = OFF
#pragma config WRT = OFF
#pragma config CCPMX = RB2
#pragma config CP = OFF

# 26 "/opt/microchip/xc8/v1.45/include/htc.h"
extern const char __xc8_OPTIM_SPEED;

extern double __fpnormalize(double);


# 13 "/opt/microchip/xc8/v1.45/include/xc8debug.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 50 "/opt/microchip/xc8/v1.45/include/pic16f819.h"
extern volatile unsigned char INDF @ 0x000;

asm("INDF equ 00h");




extern volatile unsigned char TMR0 @ 0x001;

asm("TMR0 equ 01h");




extern volatile unsigned char PCL @ 0x002;

asm("PCL equ 02h");




extern volatile unsigned char STATUS @ 0x003;

asm("STATUS equ 03h");


typedef union {
struct {
unsigned C :1;
unsigned DC :1;
unsigned Z :1;
unsigned nPD :1;
unsigned nTO :1;
unsigned RP :2;
unsigned IRP :1;
};
struct {
unsigned :5;
unsigned RP0 :1;
unsigned RP1 :1;
};
struct {
unsigned CARRY :1;
unsigned :1;
unsigned ZERO :1;
};
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0x003;

# 157
extern volatile unsigned char FSR @ 0x004;

asm("FSR equ 04h");




extern volatile unsigned char PORTA @ 0x005;

asm("PORTA equ 05h");


typedef union {
struct {
unsigned RA0 :1;
unsigned RA1 :1;
unsigned RA2 :1;
unsigned RA3 :1;
unsigned RA4 :1;
unsigned RA5 :1;
unsigned RA6 :1;
unsigned RA7 :1;
};
} PORTAbits_t;
extern volatile PORTAbits_t PORTAbits @ 0x005;

# 226
extern volatile unsigned char PORTB @ 0x006;

asm("PORTB equ 06h");


typedef union {
struct {
unsigned RB0 :1;
unsigned RB1 :1;
unsigned RB2 :1;
unsigned RB3 :1;
unsigned RB4 :1;
unsigned RB5 :1;
unsigned RB6 :1;
unsigned RB7 :1;
};
} PORTBbits_t;
extern volatile PORTBbits_t PORTBbits @ 0x006;

# 288
extern volatile unsigned char PCLATH @ 0x00A;

asm("PCLATH equ 0Ah");


typedef union {
struct {
unsigned PCLATH :5;
};
} PCLATHbits_t;
extern volatile PCLATHbits_t PCLATHbits @ 0x00A;

# 308
extern volatile unsigned char INTCON @ 0x00B;

asm("INTCON equ 0Bh");


typedef union {
struct {
unsigned RBIF :1;
unsigned INTF :1;
unsigned TMR0IF :1;
unsigned RBIE :1;
unsigned INTE :1;
unsigned TMR0IE :1;
unsigned PEIE :1;
unsigned GIE :1;
};
} INTCONbits_t;
extern volatile INTCONbits_t INTCONbits @ 0x00B;

# 370
extern volatile unsigned char PIR1 @ 0x00C;

asm("PIR1 equ 0Ch");


typedef union {
struct {
unsigned TMR1IF :1;
unsigned TMR2IF :1;
unsigned CCP1IF :1;
unsigned SSPIF :1;
unsigned :2;
unsigned ADIF :1;
};
} PIR1bits_t;
extern volatile PIR1bits_t PIR1bits @ 0x00C;

# 415
extern volatile unsigned char PIR2 @ 0x00D;

asm("PIR2 equ 0Dh");


typedef union {
struct {
unsigned :4;
unsigned EEIF :1;
};
} PIR2bits_t;
extern volatile PIR2bits_t PIR2bits @ 0x00D;

# 436
extern volatile unsigned short TMR1 @ 0x00E;

asm("TMR1 equ 0Eh");




extern volatile unsigned char TMR1L @ 0x00E;

asm("TMR1L equ 0Eh");




extern volatile unsigned char TMR1H @ 0x00F;

asm("TMR1H equ 0Fh");




extern volatile unsigned char T1CON @ 0x010;

asm("T1CON equ 010h");


typedef union {
struct {
unsigned TMR1ON :1;
unsigned TMR1CS :1;
unsigned nT1SYNC :1;
unsigned T1OSCEN :1;
unsigned T1CKPS :2;
};
struct {
unsigned :4;
unsigned T1CKPS0 :1;
unsigned T1CKPS1 :1;
};
struct {
unsigned :2;
unsigned T1INSYNC :1;
};
} T1CONbits_t;
extern volatile T1CONbits_t T1CONbits @ 0x010;

# 525
extern volatile unsigned char TMR2 @ 0x011;

asm("TMR2 equ 011h");




extern volatile unsigned char T2CON @ 0x012;

asm("T2CON equ 012h");


typedef union {
struct {
unsigned T2CKPS :2;
unsigned TMR2ON :1;
unsigned TOUTPS :4;
};
struct {
unsigned T2CKPS0 :1;
unsigned T2CKPS1 :1;
unsigned :1;
unsigned TOUTPS0 :1;
unsigned TOUTPS1 :1;
unsigned TOUTPS2 :1;
unsigned TOUTPS3 :1;
};
} T2CONbits_t;
extern volatile T2CONbits_t T2CONbits @ 0x012;

# 603
extern volatile unsigned char SSPBUF @ 0x013;

asm("SSPBUF equ 013h");




extern volatile unsigned char SSPCON @ 0x014;

asm("SSPCON equ 014h");


typedef union {
struct {
unsigned SSPM :4;
unsigned CKP :1;
unsigned SSPEN :1;
unsigned SSPOV :1;
unsigned WCOL :1;
};
struct {
unsigned SSPM0 :1;
unsigned SSPM1 :1;
unsigned SSPM2 :1;
unsigned SSPM3 :1;
};
} SSPCONbits_t;
extern volatile SSPCONbits_t SSPCONbits @ 0x014;

# 680
extern volatile unsigned short CCPR1 @ 0x015;

asm("CCPR1 equ 015h");




extern volatile unsigned char CCPR1L @ 0x015;

asm("CCPR1L equ 015h");




extern volatile unsigned char CCPR1H @ 0x016;

asm("CCPR1H equ 016h");




extern volatile unsigned char CCP1CON @ 0x017;

asm("CCP1CON equ 017h");


typedef union {
struct {
unsigned CCP1M :4;
unsigned CCP1Y :1;
unsigned CCP1X :1;
};
struct {
unsigned CCP1M0 :1;
unsigned CCP1M1 :1;
unsigned CCP1M2 :1;
unsigned CCP1M3 :1;
};
} CCP1CONbits_t;
extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;

# 759
extern volatile unsigned char ADRESH @ 0x01E;

asm("ADRESH equ 01Eh");




extern volatile unsigned char ADCON0 @ 0x01F;

asm("ADCON0 equ 01Fh");


typedef union {
struct {
unsigned ADON :1;
unsigned :1;
unsigned GO_nDONE :1;
unsigned CHS :3;
unsigned ADCS :2;
};
struct {
unsigned :2;
unsigned GO :1;
unsigned CHS0 :1;
unsigned CHS1 :1;
unsigned CHS2 :1;
unsigned ADCS0 :1;
unsigned ADCS1 :1;
};
struct {
unsigned :2;
unsigned nDONE :1;
};
struct {
unsigned :2;
unsigned GO_DONE :1;
};
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits @ 0x01F;

# 862
extern volatile unsigned char OPTION_REG @ 0x081;

asm("OPTION_REG equ 081h");


typedef union {
struct {
unsigned PS :3;
unsigned PSA :1;
unsigned T0SE :1;
unsigned T0CS :1;
unsigned INTEDG :1;
unsigned nRBPU :1;
};
struct {
unsigned PS0 :1;
unsigned PS1 :1;
unsigned PS2 :1;
};
} OPTION_REGbits_t;
extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;

# 932
extern volatile unsigned char TRISA @ 0x085;

asm("TRISA equ 085h");


typedef union {
struct {
unsigned TRISA0 :1;
unsigned TRISA1 :1;
unsigned TRISA2 :1;
unsigned TRISA3 :1;
unsigned TRISA4 :1;
unsigned TRISA5 :1;
unsigned TRISA6 :1;
unsigned TRISA7 :1;
};
} TRISAbits_t;
extern volatile TRISAbits_t TRISAbits @ 0x085;

# 994
extern volatile unsigned char TRISB @ 0x086;

asm("TRISB equ 086h");


typedef union {
struct {
unsigned TRISB0 :1;
unsigned TRISB1 :1;
unsigned TRISB2 :1;
unsigned TRISB3 :1;
unsigned TRISB4 :1;
unsigned TRISB5 :1;
unsigned TRISB6 :1;
unsigned TRISB7 :1;
};
} TRISBbits_t;
extern volatile TRISBbits_t TRISBbits @ 0x086;

# 1056
extern volatile unsigned char PIE1 @ 0x08C;

asm("PIE1 equ 08Ch");


typedef union {
struct {
unsigned TMR1IE :1;
unsigned TMR2IE :1;
unsigned CCP1IE :1;
unsigned SSPIE :1;
unsigned :2;
unsigned ADIE :1;
};
} PIE1bits_t;
extern volatile PIE1bits_t PIE1bits @ 0x08C;

# 1101
extern volatile unsigned char PIE2 @ 0x08D;

asm("PIE2 equ 08Dh");


typedef union {
struct {
unsigned :4;
unsigned EEIE :1;
};
} PIE2bits_t;
extern volatile PIE2bits_t PIE2bits @ 0x08D;

# 1122
extern volatile unsigned char PCON @ 0x08E;

asm("PCON equ 08Eh");


typedef union {
struct {
unsigned nBOR :1;
unsigned nPOR :1;
};
struct {
unsigned nBO :1;
};
} PCONbits_t;
extern volatile PCONbits_t PCONbits @ 0x08E;

# 1156
extern volatile unsigned char OSCCON @ 0x08F;

asm("OSCCON equ 08Fh");


typedef union {
struct {
unsigned :2;
unsigned IOFS :1;
unsigned :1;
unsigned IRCF :3;
};
struct {
unsigned :4;
unsigned IRCF0 :1;
unsigned IRCF1 :1;
unsigned IRCF2 :1;
};
} OSCCONbits_t;
extern volatile OSCCONbits_t OSCCONbits @ 0x08F;

# 1205
extern volatile unsigned char OSCTUNE @ 0x090;

asm("OSCTUNE equ 090h");


typedef union {
struct {
unsigned TUN :6;
};
struct {
unsigned TUN0 :1;
unsigned TUN1 :1;
unsigned TUN2 :1;
unsigned TUN3 :1;
unsigned TUN4 :1;
unsigned TUN5 :1;
};
} OSCTUNEbits_t;
extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;

# 1263
extern volatile unsigned char PR2 @ 0x092;

asm("PR2 equ 092h");




extern volatile unsigned char SSPADD @ 0x093;

asm("SSPADD equ 093h");




extern volatile unsigned char SSPSTAT @ 0x094;

asm("SSPSTAT equ 094h");


typedef union {
struct {
unsigned BF :1;
unsigned UA :1;
unsigned R_nW :1;
unsigned S :1;
unsigned P :1;
unsigned D_nA :1;
unsigned CKE :1;
unsigned SMP :1;
};
struct {
unsigned :2;
unsigned R :1;
unsigned :2;
unsigned D :1;
};
struct {
unsigned :2;
unsigned I2C_READ :1;
unsigned I2C_START :1;
unsigned I2C_STOP :1;
unsigned I2C_DATA :1;
};
struct {
unsigned :2;
unsigned nW :1;
unsigned :2;
unsigned nA :1;
};
struct {
unsigned :2;
unsigned nWRITE :1;
unsigned :2;
unsigned nADDRESS :1;
};
struct {
unsigned :2;
unsigned R_W :1;
unsigned :2;
unsigned D_A :1;
};
struct {
unsigned :2;
unsigned READ_WRITE :1;
unsigned :2;
unsigned DATA_ADDRESS :1;
};
} SSPSTATbits_t;
extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;

# 1446
extern volatile unsigned char ADRESL @ 0x09E;

asm("ADRESL equ 09Eh");




extern volatile unsigned char ADCON1 @ 0x09F;

asm("ADCON1 equ 09Fh");


typedef union {
struct {
unsigned PCFG :4;
unsigned :2;
unsigned ADCS2 :1;
unsigned ADFM :1;
};
struct {
unsigned PCFG0 :1;
unsigned PCFG1 :1;
unsigned PCFG2 :1;
unsigned PCFG3 :1;
};
} ADCON1bits_t;
extern volatile ADCON1bits_t ADCON1bits @ 0x09F;

# 1512
extern volatile unsigned char EEDATA @ 0x10C;

asm("EEDATA equ 010Ch");




extern volatile unsigned char EEADR @ 0x10D;

asm("EEADR equ 010Dh");




extern volatile unsigned char EEDATH @ 0x10E;

asm("EEDATH equ 010Eh");




extern volatile unsigned char EEADRH @ 0x10F;

asm("EEADRH equ 010Fh");




extern volatile unsigned char EECON1 @ 0x18C;

asm("EECON1 equ 018Ch");


typedef union {
struct {
unsigned RD :1;
unsigned WR :1;
unsigned WREN :1;
unsigned WRERR :1;
unsigned FREE :1;
unsigned :2;
unsigned EEPGD :1;
};
} EECON1bits_t;
extern volatile EECON1bits_t EECON1bits @ 0x18C;

# 1591
extern volatile unsigned char EECON2 @ 0x18D;

asm("EECON2 equ 018Dh");

# 1603
extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;

extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;

extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;

extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;

extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;

extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;

extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;

extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;

extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;

extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;

extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;

extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;

extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;

extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;

extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;

extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;

extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;

extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;

extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;

extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;

extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;

extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;

extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;

extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;

extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;

extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;

extern volatile __bit FREE @ (((unsigned) &EECON1)*8) + 4;

extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;

extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;

extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;

extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;

extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;

extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;

extern volatile __bit IOFS @ (((unsigned) &OSCCON)*8) + 2;

extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;

extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;

extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;

extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;

extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;

extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;

extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;

extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;

extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;

extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;

extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;

extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;

extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;

extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;

extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;

extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;

extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;

extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;

extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;

extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;

extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;

extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;

extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;

extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;

extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;

extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;

extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;

extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;

extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;

extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;

extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;

extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;

extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;

extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;

extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;

extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;

extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;

extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;

extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;

extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;

extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;

extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;

extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;

extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;

extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;

extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;

extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;

extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;

extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;

extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;

extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;

extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;

extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;

extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;

extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;

extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;

extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;

extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;

extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;

extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;

extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;

extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;

extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;

extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;

extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;

extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;

extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;

extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;

extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;

extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;

extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;

extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;

extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;

extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;

extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;

extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;

extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;

extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;

extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;

extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;

extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;

extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;

extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;

extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;

extern volatile __bit TUN5 @ (((unsigned) &OSCTUNE)*8) + 5;

extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;

extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;

extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;

extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;

extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;

extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;

extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;

extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;

extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;

extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;

extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;

extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;

extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;

extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;

extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;


# 28 "/opt/microchip/xc8/v1.45/include/pic.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 78
extern unsigned int flash_read(unsigned short addr);

# 114 "/opt/microchip/xc8/v1.45/include/eeprom_routines.h"
extern void eeprom_write(unsigned char addr, unsigned char value);
extern unsigned char eeprom_read(unsigned char addr);
extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);


# 152 "/opt/microchip/xc8/v1.45/include/pic.h"
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);
#pragma intrinsic(_delaywdt)
extern __nonreentrant void _delaywdt(unsigned long);

# 193
extern __bank0 unsigned char __resetbits;
extern __bank0 __bit __powerdown;
extern __bank0 __bit __timeout;

# 38 "main.c"
int counta, countb;
unsigned char pc_track, pc_end_graphics;
int vram_1,vram_2,vram_3,vram_4,vram_5,vram_6,vram_7,vram_8;
int vtemp_1,vtemp_2,vtemp_3,vtemp_4,vtemp_5,vtemp_6,vtemp_7,vtemp_8;
int repeat_frame,car_data,button_timer,button_adjust,stop_repeat,level,speed,end_hold,i=0;
int press = 0;
unsigned char track_data();
unsigned char end_data();
void display();
void check_collision();
void collided();
void collided_data();
void car();
void joystick();
void delay();
void go_left();
void go_right();
void button_time();
void fill_vram();
void setup();
void setup()
{
TRISA= (0b11110111);
PORTA=( 0b00001000);
PORTB=(0X00);

vram_1= 0X00;
vram_2= 0X00;
vram_3= 0X00;
vram_4= 0X00;
vram_5= 0X00;
vram_6= 0X00;
vram_7= 0X00;
vram_8= 0X00;


stop_repeat = 0;
pc_track = 0;
pc_end_graphics = 0;
car_data = 0b00010000;
button_adjust = 8;
level = 1;
speed = 10;
end_hold = 50;
}


void collided_data()
{

for( i =0; i<7;i++)
{

end_data();
delay();


}

end_data();
delay();
collided();
return;

}

void collided()
{
loop:PORTB=(0X00) ;
PORTB=(0b00001000);

if((level & 0X01 )== 0X01)
{
pc_end_graphics = 0;

}
if((level & 0X02 )== 0X02)
{
pc_end_graphics = 8;

}
if((level & 0X04 )== 0X04)
{
pc_end_graphics = 16;

}
if((level & 0X08 )== 0X08)
{
pc_end_graphics = 24;

}
if((level & 0X10 )== 0X10)
{
pc_end_graphics = 32;

}
if((level & 0X20 )== 0X20)
{
pc_end_graphics = 40;

}
if((level & 0X40 )== 0X40)
{
pc_end_graphics = 48;

}
if((level & 0X80 )== 0X80)
{
pc_end_graphics = 56;

}


end_hold--;
if(end_hold!=0)
{
for( i =0; i<7;i++)
{
end_data();


}
end_data();
goto loop;
}
end_hold = 1;

if(PORTAbits.RA7==0X00)
{
setup();
}

if(PORTAbits.RA6==0X00)
{
setup() ;
}


}

void main()
{

TRISB=(0b00000000);
TRISA=(0b11110000);


PORTB=(0b11110000);
PORTA=(0X00);



setup();
while(1)
{
start: PORTAbits.RA3=1;;

pc_end_graphics = 16;
collided_data();
pc_end_graphics = 8 ;
collided_data();
pc_end_graphics = 0;
collided_data();
display();
fill_vram();
while((PORTAbits.RA7==1) && (PORTAbits.RA6 == 1))
{
press = 1;
}
if(press == 1)
{
press = 0;
goto start;
}

}
}

void delay()
{

counta = 3;
countb = 3;
while(counta != 0)
{
counta--;
}
while(countb != 0)
{
countb--;
}

}

unsigned char end_data()
{

pc_end_graphics++;

switch(pc_end_graphics)
{

case 1: PORTB=(0b00011000); break;
case 2: PORTB=(0b00111000); break;
case 3: PORTB=(0b01111000); break;
case 4: PORTB=(0b00011000); break;
case 5: PORTB=(0b00011000); break;
case 6: PORTB=(0b00011000); break;
case 7: PORTB=(0b01111110); break;
case 8: PORTB=(0b01111110); break;


case 9: PORTB=(0b00111000); break;
case 10: PORTB=(0b01111100); break;
case 11: PORTB=(0b11000110); break;
case 12: PORTB=(0b00001100); break;
case 13: PORTB=(0b00011000); break;
case 14: PORTB=(0b00110000); break;
case 15: PORTB=(0b01111110); break;
case 16: PORTB=(0b11111110); break;


case 17: PORTB=(0b00111100); break;
case 18: PORTB=(0b01111110); break;
case 19: PORTB=(0b00000110); break;
case 20: PORTB=(0b00111110); break;
case 21: PORTB=(0b00111110); break;
case 22: PORTB=(0b00000110); break;
case 23: PORTB=(0b01111110); break;
case 24: PORTB=(0b00111100); break;

case 25: PORTB=(0b01100110);break;
case 26: PORTB=(0b01100110);break;
case 27: PORTB=(0b01100110);break;
case 28: PORTB=(0b01100110);break;
case 29: PORTB=(0b01111110);break;
case 30: PORTB=(0b00111110);break;
case 31: PORTB=(0b00000110);break;
case 32: PORTB=(0b00000110);break;

case 33: PORTB=(0b01111110);break;
case 34: PORTB=(0b01111110);break;
case 35: PORTB=(0b01100000);break;
case 36: PORTB=(0b01111100);break;
case 37: PORTB=(0b01111110);break;
case 38: PORTB=(0b00000110);break;
case 39: PORTB=(0b01111110);break;
case 40: PORTB=(0b01111100);break;

case 41: PORTB=(0b00111110);break;
case 42: PORTB=(0b01111110);break;
case 43: PORTB=(0b01100000);break;
case 44: PORTB=(0b01111100);break;
case 45: PORTB=(0b01111110);break;
case 46: PORTB=(0b01100110);break;
case 47: PORTB=(0b01111110);break;
case 48: PORTB=(0b00111100);break;

case 49: PORTB=(0b01111111);break;
case 50: PORTB=(0b01111111);break;
case 51: PORTB=(0b00000011);break;
case 52: PORTB=(0b00000110);break;
case 53: PORTB=(0b00001100);break;
case 54: PORTB=(0b00011000);break;
case 55: PORTB=(0b00110000);break;
case 56: PORTB=(0b01100000);break;

case 57: PORTB=(0b00111100);break;
case 58: PORTB=(0b01000010);break;
case 59: PORTB=(0b10100101);break;
case 60: PORTB=(0b10000001);break;
case 61: PORTB=(0b10100101);break;
case 62: PORTB=(0b10011001);break;
case 63: PORTB=(0b01000010);break;
case 64: PORTB=(0b00111100);break;
default : break;
}
}

void display()
{

repeat_frame = speed;
car();

while(repeat_frame !=0)
{
PORTA=(0b00001000);
PORTB=(vram_1);
delay();
PORTB=(0X00);

PORTA=(0b00001001);
PORTB=(vram_2);
delay();
PORTB=(0X00);

PORTA=(0b00001010);
PORTB=(vram_3);
delay();
PORTB=(0X00);


PORTA=(0b00001011);
PORTB=(vram_4);
delay();
PORTB=(0X00);

PORTA=(0b00001100);
PORTB=(vram_5);
delay();
PORTB=(0X00);

PORTA=(0b00001101);
PORTB=(vram_6);
delay();
PORTB=(0X00);

PORTA=(0b00001110);
PORTB=(vram_7);
delay();
PORTB=(0X00);

PORTA=(0b00001111);
PORTB=(vram_8);
delay();
PORTB=(0X00);
if((stop_repeat & 0b00000010 ) == 1)
{
button_time();
check_collision();


}
repeat_frame--;
}
return;
}

void check_collision()
{
vram_8 = vram_8 & car_data;
if((STATUS & 0b00000100) == 0b00000000)
{
collided();
}


}


void car()
{
joystick();
PORTA=(0b11111011);
PORTB=(car_data);
delay();

PORTAbits.RA3=1;
return;

}

void go_left()
{
if ((stop_repeat & 0X01)==0X01)
{
return;
}
car_data = car_data>>1;
stop_repeat = 0X03;
button_timer= button_adjust;
return;
}

void go_right()
{
if ((stop_repeat & 0X01)==0X01)
{
return;
}
car_data = car_data<<1;
stop_repeat|= 0X03;
button_timer= button_adjust;
return;
}
void joystick()
{
if(PORTAbits.RA7==0)
{
go_left();
}

if(PORTAbits.RA6==0)
{
go_right();
}
return;
}

void button_time()
{
button_timer--;
if(button_timer!=0)
{
return;
}
stop_repeat|=0X03;

return;

}

unsigned char track_data()
{


pc_track = pc_track + 1 ;
switch(pc_track)
{

case 1: vram_1=(0b10000001); break;
case 2: vram_1=(0b10000001); break;
case 3: vram_1=(0b11000001); break;
case 4: vram_1=(0b11100001); break;
case 5: vram_1=(0b11100001); break;
case 6: vram_1=(0b11110001); break;
case 7: vram_1=(0b11110001); break;
case 8: vram_1=(0b11111001); break;
case 9: vram_1=(0b11110001); break;
case 10: vram_1=(0b11100001); break;
case 11: vram_1=(0b11000011); break;
case 12: vram_1=(0b10000111); break;
case 13: vram_1=(0b10001111); break;
case 14: vram_1=(0b10000111); break;
case 15: vram_1=(0b10000011); break;
case 16: vram_1=(0b10110001); break;
case 17: vram_1=(0b10111001); break;
case 18: vram_1=(0b10111001); break;
case 19: vram_1=(0b10111001); break;
case 20: vram_1=(0b10010001); break;
case 21: vram_1=(0b10000001); break;
case 22: vram_1=(0b10000001); break;
case 23: vram_1=(0b11000011); break;
case 24: vram_1=(0b11100111); break;
case 25: vram_1=(0b11000011); break;
case 26: vram_1=(0b10000001); break;
case 27: vram_1=(0b10011001); break;
case 28: vram_1=(0b10011001); break;
case 29: vram_1=(0b10111101); break;
case 31: vram_1=(0b10011001); break;
case 32: vram_1=(0b10011001); break;
case 33: vram_1=(0b10000001); break;
case 34: vram_1=(0b11000011); break;
case 35: vram_1=(0b11100111); break;
case 36: vram_1=(0b11000011); break;
case 37: vram_1=(0b10000001); break;
case 38: vram_1=(0b10000001); break;
case 39: vram_1=(0b10010001); break;
case 40: vram_1=(0b10110001); break;
case 41: vram_1=(0b10111001); break;
case 42: vram_1=(0b10111001); break;
case 43: vram_1=(0b10011001); break;
case 44: vram_1=(0b10000001); break;
case 45: vram_1=(0b10000011); break;
case 46: vram_1=(0b10000111); break;
case 47: vram_1=(0b10001111); break;
case 48: vram_1=(0b10000111); break;
case 49: vram_1=(0b11000001); break;
case 50: vram_1=(0b11100001); break;
case 51: vram_1=(0b11110001); break;
case 52: vram_1=(0b11111001); break;
case 55: vram_1=(0b11111101); break;
case 56: vram_1=(0b11111001); break;
case 57: vram_1=(0b11110001); break;
case 58: vram_1=(0b10000001); break;
case 59: vram_1=(0b10000001); break;
case 60: vram_1=(0b10110001); break;
case 61: vram_1=(0b10110001); break;
case 62: vram_1=(0b10110001); break;
default : break;
}
level = level<< 1;
PORTA=(0b00001000);
delay();
PORTA=(0b00000000);
if((level & 0b01000000) == 0b01000000)
{
collided();
}
else
{
speed --;
}

pc_track = 0X01;
return (0b10000001);
}

void fill_vram()
{

vtemp_1 = vram_1 ;
vtemp_2 = vram_2 ;
vtemp_3 = vram_3 ;
vtemp_4 = vram_4 ;
vtemp_5 = vram_5 ;
vtemp_6 = vram_6 ;
vtemp_7 = vram_7 ;


track_data();

vram_2 = vtemp_1;
vram_3 = vtemp_2;
vram_4 = vtemp_3;
vram_5 = vtemp_4;
vram_6 = vtemp_5;
vram_7 = vtemp_6;
vram_8 = vtemp_7;

# 564
}
